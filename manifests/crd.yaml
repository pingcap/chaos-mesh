apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: awschaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: AwsChaos
    listKind: AwsChaosList
    plural: awschaos
    singular: awschaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: AwsChaos is the Schema for the awschaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AwsChaosSpec is the content of the specification for an AwsChaos
          properties:
            action:
              description: 'Action defines the specific aws chaos action. Supported
                action: ec2-stop / ec2-restart / detach-volume Default action: ec2-stop'
              enum:
              - ec2-stop
              - ec2-restart
              - detach-volume
              type: string
            attackConfiguration:
              description: AttackConfiguration indicates the name of the attack. Needed
                in attack-configuration.
              type: string
            awsRegion:
              description: AwsRegion defines the region of aws.
              type: string
            deviceName:
              description: DeviceName indicates the name of the device. Needed in
                detach-volume.
              type: string
            duration:
              description: Duration represents the duration of the chaos action.
              type: string
            ec2Instance:
              description: Ec2Instance indicates the ID of the ec2 instance.
              type: string
            endpoint:
              description: Endpoint indicates the endpoint of the aws server. Just
                used it in test now.
              type: string
            secretName:
              description: SecretName defines the name of kubernetes secret.
              type: string
            volumeID:
              description: EbsVolume indicates the ID of the EBS volume. Needed in
                detach-volume.
              type: string
          required:
          - action
          - awsRegion
          - ec2Instance
          type: object
        status:
          description: AwsChaosStatus represents the status of an AwsChaos
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: dnschaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: DNSChaos
    listKind: DNSChaosList
    plural: dnschaos
    singular: dnschaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: DNSChaos is the Schema for the networkchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a pod chaos experiment
          properties:
            action:
              description: 'Action defines the specific DNS chaos action. Supported
                action: error, random Default action: error'
              enum:
              - error
              - random
              type: string
            containerNames:
              description: ContainerName indicates the name of affected container.
                If not set, all containers will be injected
              items:
                type: string
              type: array
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            patterns:
              description: "Choose which domain names to take effect, support the
                placeholder ? and wildcard *, or the Specified domain name. Note:
                \     1. The wildcard * must be at the end of the string. For example,
                chaos-*.org is invalid.      2. if the patterns is empty, will take
                effect on all the domain names. For example: \t\tThe value is [\"google.com\",
                \"github.*\", \"chaos-mes?.org\"], \t\twill take effect on \"google.com\",
                \"github.com\" and \"chaos-mesh.org\""
              items:
                type: string
              type: array
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the chaos experiment about
            pods
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: gcpchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: GcpChaos
    listKind: GcpChaosList
    plural: gcpchaos
    singular: gcpchaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: GcpChaos is the Schema for the gcpchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: GcpChaosSpec is the content of the specification for a GcpChaos
          properties:
            action:
              description: 'Action defines the specific gcp chaos action. Supported
                action: node-stop / node-reset / disk-loss Default action: node-stop'
              enum:
              - node-stop
              - node-reset
              - disk-loss
              type: string
            deviceNames:
              description: The device name of disks to detach. Needed in disk-loss.
              items:
                type: string
              type: array
            duration:
              description: Duration represents the duration of the chaos action.
              type: string
            instance:
              description: Instance defines the name of the instance
              type: string
            project:
              description: Project defines the name of gcp project.
              type: string
            secretName:
              description: SecretName defines the name of kubernetes secret. It is
                used for GCP credentials.
              type: string
            zone:
              description: Zone defines the zone of gcp project.
              type: string
          required:
          - action
          - instance
          - project
          - zone
          type: object
        status:
          description: GcpChaosStatus represents the status of a GcpChaos
          properties:
            attachedDiskStrings:
              description: The attached disk info strings. Needed in disk-loss.
              items:
                type: string
              type: array
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: httpchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: HTTPChaos
    listKind: HTTPChaosList
    plural: httpchaos
    singular: httpchaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: HTTPChaos is the Schema for the HTTPchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            abort:
              description: Abort is a rule to abort a http session.
              type: boolean
            code:
              description: Code is a rule to select target by http status code in
                response.
              format: int32
              type: integer
            delay:
              description: Delay represents the delay of the target request/response.
                A duration string is a possibly unsigned sequence of decimal numbers,
                each with optional fraction and a unit suffix, such as "300ms", "2h45m".
                Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
              type: string
            duration:
              description: Duration represents the duration of the chaos action.
              type: string
            method:
              description: Method is a rule to select target by http method in request.
              type: string
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            patch:
              description: Patch is a rule to patch some contents in target.
              properties:
                body:
                  description: Body is a rule to patch message body of target.
                  properties:
                    type:
                      description: Type represents the patch type, only support `JSON`
                        as [merge patch json](https://tools.ietf.org/html/rfc7396)
                        currently.
                      type: string
                    value:
                      description: Value is the patch contents.
                      type: string
                  required:
                  - type
                  - value
                  type: object
                headers:
                  description: 'Headers is a rule to append http headers of target.
                    For example: `[["Set-Cookie", "<one cookie>"], ["Set-Cookie",
                    "<another cookie>"]]`.'
                  items:
                    items:
                      type: string
                    type: array
                  type: array
                queries:
                  description: 'Queries is a rule to append uri queries of target(Request
                    only). For example: `[["foo", "bar"], ["foo", "unknown"]]`.'
                  items:
                    items:
                      type: string
                    type: array
                  type: array
              type: object
            path:
              description: Path is a rule to select target by uri path in http request.
              type: string
            port:
              description: Port represents the target port to be proxy of.
              format: int32
              type: integer
            replace:
              description: Replace is a rule to replace some contents in target.
              properties:
                body:
                  description: Body is a rule to replace http message body in target.
                  format: byte
                  type: string
                code:
                  description: Code is a rule to replace http status code in response.
                  format: int32
                  type: integer
                headers:
                  additionalProperties:
                    type: string
                  description: Headers is a rule to replace http headers of target.
                    The key-value pairs represent header name and header value pairs.
                  type: object
                method:
                  description: Method is a rule to replace http method in request.
                  type: string
                path:
                  description: Path is rule to to replace uri path in http request.
                  type: string
                queries:
                  additionalProperties:
                    type: string
                  description: 'Queries is a rule to replace uri queries in http request.
                    For example, with value `{ "foo": "unknown" }`, the `/?foo=bar`
                    will be altered to `/?foo=unknown`,'
                  type: object
              type: object
            request_headers:
              additionalProperties:
                type: string
              description: RequestHeaders is a rule to select target by http headers
                in request. The key-value pairs represent header name and header value
                pairs.
              type: object
            response_headers:
              additionalProperties:
                type: string
              description: ResponseHeaders is a rule to select target by http headers
                in response. The key-value pairs represent header name and header
                value pairs.
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            target:
              description: Target is the object to be selected and injected.
              enum:
              - Request
              - Response
              type: string
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - mode
          - selector
          - target
          type: object
        status:
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
            instances:
              additionalProperties:
                format: int64
                type: integer
              description: Instances always specifies podhttpchaos generation or empty
              type: object
          required:
          - experiment
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: iochaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: IOChaos
    listKind: IOChaosList
    plural: iochaos
    singular: iochaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: IOChaos is the Schema for the iochaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: IOChaosSpec defines the desired state of IOChaos
          properties:
            action:
              description: 'Action defines the specific pod chaos action. Supported
                action: latency / fault / attrOverride / mistake'
              enum:
              - latency
              - fault
              - attrOverride
              - mistake
              type: string
            attr:
              description: Attr defines the overrided attribution
              properties:
                atime:
                  description: Timespec represents a time
                  properties:
                    nsec:
                      format: int64
                      type: integer
                    sec:
                      format: int64
                      type: integer
                  required:
                  - nsec
                  - sec
                  type: object
                blocks:
                  format: int64
                  type: integer
                ctime:
                  description: Timespec represents a time
                  properties:
                    nsec:
                      format: int64
                      type: integer
                    sec:
                      format: int64
                      type: integer
                  required:
                  - nsec
                  - sec
                  type: object
                gid:
                  format: int32
                  type: integer
                ino:
                  format: int64
                  type: integer
                kind:
                  description: FileType represents type of a file
                  type: string
                mtime:
                  description: Timespec represents a time
                  properties:
                    nsec:
                      format: int64
                      type: integer
                    sec:
                      format: int64
                      type: integer
                  required:
                  - nsec
                  - sec
                  type: object
                nlink:
                  format: int32
                  type: integer
                perm:
                  type: integer
                rdev:
                  format: int32
                  type: integer
                size:
                  format: int64
                  type: integer
                uid:
                  format: int32
                  type: integer
              type: object
            containerNames:
              description: ContainerName indicates the name of affected container.
                If not set, all containers will be injected
              items:
                type: string
              type: array
            delay:
              description: Delay defines the value of I/O chaos action delay. A delay
                string is a possibly signed sequence of decimal numbers, each with
                optional fraction and a unit suffix, such as "300ms". Valid time units
                are "ns", "us" (or "µs"), "ms", "s", "m", "h".
              type: string
            duration:
              description: Duration represents the duration of the chaos action. It
                is required when the action is `PodFailureAction`. A duration string
                is a possibly signed sequence of decimal numbers, each with optional
                fraction and a unit suffix, such as "300ms", "-1.5h" or "2h45m". Valid
                time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
              type: string
            errno:
              description: 'Errno defines the error code that returned by I/O action.
                refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
              format: int32
              type: integer
            methods:
              description: 'Methods defines the I/O methods for injecting I/O chaos
                action. default: all I/O methods.'
              items:
                type: string
              type: array
            mistake:
              description: Mistake defines what types of incorrectness are injected
                to IO operations
              properties:
                filling:
                  description: Filling determines what is filled in the miskate data.
                  enum:
                  - zero
                  - random
                  type: string
                maxLength:
                  description: Max length of each wrong data segment in bytes
                  format: int64
                  minimum: 1
                  type: integer
                maxOccurrences:
                  description: There will be [1, MaxOccurrences] segments of wrong
                    data.
                  format: int64
                  minimum: 1
                  type: integer
              type: object
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            path:
              description: Path defines the path of files for injecting I/O chaos
                action.
              type: string
            percent:
              description: 'Percent defines the percentage of injection errors and
                provides a number from 0-100. default: 100.'
              type: integer
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
            volumePath:
              description: VolumePath represents the mount path of injected volume
              type: string
          required:
          - action
          - mode
          - selector
          - volumePath
          type: object
        status:
          description: IOChaosStatus defines the observed state of IOChaos
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
            instances:
              additionalProperties:
                format: int64
                type: integer
              description: Instances always specifies podiochaos generation or empty
              type: object
          required:
          - experiment
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: jvmchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: JVMChaos
    listKind: JVMChaosList
    plural: jvmchaos
    singular: jvmchaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: JVMChaos is the Schema for the jvmchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: JVMChaosSpec defines the desired state of JVMChaos
          properties:
            action:
              description: 'Action defines the specific jvm chaos action. Supported
                action: delay;return;script;cfl;oom;ccf;tce;cpf;tde;tpf'
              enum:
              - delay
              - return
              - script
              - cfl
              - oom
              - ccf
              - tce
              - cpf
              - tde
              - tpf
              type: string
            containerNames:
              description: ContainerName indicates the name of affected container.
                If not set, all containers will be injected
              items:
                type: string
              type: array
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            flags:
              additionalProperties:
                type: string
              description: Flags represents the flags of action
              type: object
            matchers:
              additionalProperties:
                type: string
              description: Matchers represents the matching rules for the target
              type: object
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            target:
              description: 'Target defines the specific jvm chaos target. Supported
                target: servlet;psql;jvm;jedis;http;dubbo;rocketmq;tars;mysql;druid;redisson;rabbitmq;mongodb'
              enum:
              - servlet
              - psql
              - jvm
              - jedis
              - http
              - dubbo
              - rocketmq
              - tars
              - mysql
              - druid
              - redisson
              - rabbitmq
              - mongodb
              type: string
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          - mode
          - selector
          - target
          type: object
        status:
          description: JVMChaosStatus defines the observed state of JVMChaos
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
          required:
          - experiment
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: kernelchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: KernelChaos
    listKind: KernelChaosList
    plural: kernelchaos
    singular: kernelchaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: KernelChaos is the Schema for the kernelchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a kernel chaos experiment
          properties:
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            failKernRequest:
              description: FailKernRequest defines the request of kernel injection
              properties:
                callchain:
                  description: 'Callchain indicate a special call chain, such as:     ext4_mount       ->
                    mount_subtree          -> ...             -> should_failslab With
                    an optional set of predicates and an optional set of parameters,
                    which used with predicates. You can read call chan and predicate
                    examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                    to learn more. If no special call chain, just keep Callchain empty,
                    which means it will fail at any call chain with slab alloc (eg:
                    kmalloc).'
                  items:
                    description: Frame defines the function signature and predicate
                      in function's body
                    properties:
                      funcname:
                        description: Funcname can be find from kernel source or `/proc/kallsyms`,
                          such as `ext4_mount`
                        type: string
                      parameters:
                        description: Parameters is used with predicate, for example,
                          if you want to inject slab error in `d_alloc_parallel(struct
                          dentry *parent, const struct qstr *name)` with a special
                          name `bananas`, you need to set it to `struct dentry *parent,
                          const struct qstr *name` otherwise omit it.
                        type: string
                      predicate:
                        description: Predicate will access the arguments of this Frame,
                          example with Parameters's, you can set it to `STRNCMP(name->name,
                          "bananas", 8)` to make inject only with it, or omit it to
                          inject for all d_alloc_parallel call chain.
                        type: string
                    type: object
                  type: array
                failtype:
                  description: 'FailType indicates what to fail, can be set to ''0''
                    / ''1'' / ''2'' If `0`, indicates slab to fail (should_failslab)
                    If `1`, indicates alloc_page to fail (should_fail_alloc_page)
                    If `2`, indicates bio to fail (should_fail_bio) You can read:   1.
                    https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                    http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                    to learn more'
                  format: int32
                  maximum: 2
                  minimum: 0
                  type: integer
                headers:
                  description: 'Headers indicates the appropriate kernel headers you
                    need. Eg: "linux/mmzone.h", "linux/blkdev.h" and so on'
                  items:
                    type: string
                  type: array
                probability:
                  description: Probability indicates the fails with probability. If
                    you want 1%, please set this field with 1.
                  format: int32
                  maximum: 100
                  minimum: 0
                  type: integer
                times:
                  description: Times indicates the max times of fails.
                  format: int32
                  minimum: 0
                  type: integer
              required:
              - failtype
              type: object
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - failKernRequest
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the kernel chaos experiment
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: networkchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: NetworkChaos
    listKind: NetworkChaosList
    plural: networkchaos
    singular: networkchaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: NetworkChaos is the Schema for the networkchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a pod chaos experiment
          properties:
            action:
              description: 'Action defines the specific network chaos action. Supported
                action: partition, netem, delay, loss, duplicate, corrupt Default
                action: delay'
              enum:
              - netem
              - delay
              - loss
              - duplicate
              - corrupt
              - partition
              - bandwidth
              type: string
            bandwidth:
              description: Bandwidth represents the detail about bandwidth control
                action
              properties:
                buffer:
                  description: Buffer is the maximum amount of bytes that tokens can
                    be available for instantaneously.
                  format: int32
                  minimum: 1
                  type: integer
                limit:
                  description: Limit is the number of bytes that can be queued waiting
                    for tokens to become available.
                  format: int32
                  minimum: 1
                  type: integer
                minburst:
                  description: Minburst specifies the size of the peakrate bucket.
                    For perfect accuracy, should be set to the MTU of the interface.  If
                    a peakrate is needed, but some burstiness is acceptable, this
                    size can be raised. A 3000 byte minburst allows around 3mbit/s
                    of peakrate, given 1000 byte packets.
                  format: int32
                  minimum: 0
                  type: integer
                peakrate:
                  description: Peakrate is the maximum depletion rate of the bucket.
                    The peakrate does not need to be set, it is only necessary if
                    perfect millisecond timescale shaping is required.
                  format: int64
                  minimum: 0
                  type: integer
                rate:
                  description: Rate is the speed knob. Allows bps, kbps, mbps, gbps,
                    tbps unit. bps means bytes per second.
                  type: string
              required:
              - buffer
              - limit
              - rate
              type: object
            corrupt:
              description: Corrupt represents the detail about corrupt action
              properties:
                correlation:
                  type: string
                corrupt:
                  type: string
              required:
              - correlation
              - corrupt
              type: object
            delay:
              description: Delay represents the detail about delay action
              properties:
                correlation:
                  type: string
                jitter:
                  type: string
                latency:
                  type: string
                reorder:
                  description: ReorderSpec defines details of packet reorder.
                  properties:
                    correlation:
                      type: string
                    gap:
                      type: integer
                    reorder:
                      type: string
                  required:
                  - correlation
                  - gap
                  - reorder
                  type: object
              required:
              - latency
              type: object
            direction:
              description: Direction represents the direction, this applies on netem
                and network partition action
              enum:
              - to
              - from
              - both
              - ""
              type: string
            duplicate:
              description: DuplicateSpec represents the detail about loss action
              properties:
                correlation:
                  type: string
                duplicate:
                  type: string
              required:
              - correlation
              - duplicate
              type: object
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            externalTargets:
              description: ExternalTargets represents network targets outside k8s
              items:
                type: string
              type: array
            loss:
              description: Loss represents the detail about loss action
              properties:
                correlation:
                  type: string
                loss:
                  type: string
              required:
              - correlation
              - loss
              type: object
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            target:
              description: Target represents network target, this applies on netem
                and network partition action
              properties:
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - mode
              - selector
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the chaos experiment about
            pods
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
            instances:
              additionalProperties:
                format: int64
                type: integer
              description: Instances always specifies podnetworkchaos generation or
                empty
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: podchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodChaos
    listKind: PodChaosList
    plural: podchaos
    singular: podchaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: PodChaos is the control script`s spec.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a pod chaos experiment
          properties:
            action:
              description: 'Action defines the specific pod chaos action. Supported
                action: pod-kill / pod-failure / container-kill Default action: pod-kill'
              enum:
              - pod-kill
              - pod-failure
              - container-kill
              type: string
            containerNames:
              description: ContainerName indicates the name of affected container.
                If not set, all containers will be injected
              items:
                type: string
              type: array
            duration:
              description: Duration represents the duration of the chaos action. It
                is required when the action is `PodFailureAction`. A duration string
                is a possibly signed sequence of decimal numbers, each with optional
                fraction and a unit suffix, such as "300ms", "-1.5h" or "2h45m". Valid
                time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
              type: string
            gracePeriod:
              description: GracePeriod is used in pod-kill action. It represents the
                duration in seconds before the pod should be deleted. Value must be
                non-negative integer. The default value is zero that indicates delete
                immediately.
              format: int64
              minimum: 0
              type: integer
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the chaos experiment about
            pods
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: podhttpchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodHttpChaos
    listKind: PodHttpChaosList
    plural: podhttpchaos
    singular: podhttpchaos
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PodHttpChaos is the Schema for the podhttpchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PodHttpChaosSpec defines the desired state of PodHttpChaos.
          properties:
            rules:
              description: Rules are a list of injection rule for http request.
              items:
                description: PodHttpChaosRule defines the injection rule for http.
                properties:
                  actions:
                    description: Actions contains rules to inject target.
                    properties:
                      abort:
                        description: Abort is a rule to abort a http session.
                        type: boolean
                      delay:
                        description: Delay represents the delay of the target request/response.
                          A duration string is a possibly unsigned sequence of decimal
                          numbers, each with optional fraction and a unit suffix,
                          such as "300ms", "2h45m". Valid time units are "ns", "us"
                          (or "µs"), "ms", "s", "m", "h".
                        type: string
                      patch:
                        description: Patch is a rule to patch some contents in target.
                        properties:
                          body:
                            description: Body is a rule to patch message body of target.
                            properties:
                              type:
                                description: Type represents the patch type, only
                                  support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                                  currently.
                                type: string
                              value:
                                description: Value is the patch contents.
                                type: string
                            required:
                            - type
                            - value
                            type: object
                          headers:
                            description: 'Headers is a rule to append http headers
                              of target. For example: `[["Set-Cookie", "<one cookie>"],
                              ["Set-Cookie", "<another cookie>"]]`.'
                            items:
                              items:
                                type: string
                              type: array
                            type: array
                          queries:
                            description: 'Queries is a rule to append uri queries
                              of target(Request only). For example: `[["foo", "bar"],
                              ["foo", "unknown"]]`.'
                            items:
                              items:
                                type: string
                              type: array
                            type: array
                        type: object
                      replace:
                        description: Replace is a rule to replace some contents in
                          target.
                        properties:
                          body:
                            description: Body is a rule to replace http message body
                              in target.
                            format: byte
                            type: string
                          code:
                            description: Code is a rule to replace http status code
                              in response.
                            format: int32
                            type: integer
                          headers:
                            additionalProperties:
                              type: string
                            description: Headers is a rule to replace http headers
                              of target. The key-value pairs represent header name
                              and header value pairs.
                            type: object
                          method:
                            description: Method is a rule to replace http method in
                              request.
                            type: string
                          path:
                            description: Path is rule to to replace uri path in http
                              request.
                            type: string
                          queries:
                            additionalProperties:
                              type: string
                            description: 'Queries is a rule to replace uri queries
                              in http request. For example, with value `{ "foo": "unknown"
                              }`, the `/?foo=bar` will be altered to `/?foo=unknown`,'
                            type: object
                        type: object
                    type: object
                  port:
                    description: Port represents the target port to be proxy of.
                    format: int32
                    type: integer
                  selector:
                    description: Selector contains the rules to select target.
                    properties:
                      code:
                        description: Code is a rule to select target by http status
                          code in response.
                        format: int32
                        type: integer
                      method:
                        description: Method is a rule to select target by http method
                          in request.
                        type: string
                      path:
                        description: Path is a rule to select target by uri path in
                          http request.
                        type: string
                      port:
                        description: Port is a rule to select server listening on
                          specific port.
                        format: int32
                        type: integer
                      request_headers:
                        additionalProperties:
                          type: string
                        description: RequestHeaders is a rule to select target by
                          http headers in request. The key-value pairs represent header
                          name and header value pairs.
                        type: object
                      response_headers:
                        additionalProperties:
                          type: string
                        description: ResponseHeaders is a rule to select target by
                          http headers in response. The key-value pairs represent
                          header name and header value pairs.
                        type: object
                    type: object
                  source:
                    description: Source represents the source of current rules
                    type: string
                  target:
                    description: Target is the object to be selected and injected,
                      <Request|Response>.
                    type: string
                required:
                - actions
                - port
                - selector
                - target
                type: object
              type: array
          type: object
        status:
          description: PodHttpChaosStatus defines the actual state of PodHttpChaos.
          properties:
            failedMessage:
              type: string
            observedGeneration:
              format: int64
              type: integer
            pid:
              description: Pid represents a running tproxy process id.
              format: int64
              type: integer
            startTime:
              description: StartTime represents the start time of a tproxy process.
              format: int64
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: podiochaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodIOChaos
    listKind: PodIOChaosList
    plural: podiochaos
    singular: podiochaos
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PodIOChaos is the Schema for the podiochaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PodIOChaosSpec defines the desired state of IOChaos
          properties:
            actions:
              description: Actions are a list of IOChaos actions
              items:
                description: IOChaosAction defines an possible action of IOChaos
                properties:
                  atime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  blocks:
                    format: int64
                    type: integer
                  ctime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  faults:
                    description: Faults represents the fault to inject
                    items:
                      description: IoFault represents the fault to inject and their
                        weight
                      properties:
                        errno:
                          format: int32
                          type: integer
                        weight:
                          format: int32
                          type: integer
                      required:
                      - errno
                      - weight
                      type: object
                    type: array
                  gid:
                    format: int32
                    type: integer
                  ino:
                    format: int64
                    type: integer
                  kind:
                    description: FileType represents type of a file
                    type: string
                  latency:
                    description: Latency represents the latency to inject
                    type: string
                  methods:
                    description: Methods represents the method that the action will
                      inject in
                    items:
                      type: string
                    type: array
                  mistake:
                    description: MistakeSpec represents the mistake to inject
                    properties:
                      filling:
                        description: Filling determines what is filled in the miskate
                          data.
                        enum:
                        - zero
                        - random
                        type: string
                      maxLength:
                        description: Max length of each wrong data segment in bytes
                        format: int64
                        minimum: 1
                        type: integer
                      maxOccurrences:
                        description: There will be [1, MaxOccurrences] segments of
                          wrong data.
                        format: int64
                        minimum: 1
                        type: integer
                    type: object
                  mtime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  nlink:
                    format: int32
                    type: integer
                  path:
                    description: Path represents a glob of injecting path
                    type: string
                  percent:
                    description: Percent represents the percent probability of injecting
                      this action
                    type: integer
                  perm:
                    type: integer
                  rdev:
                    format: int32
                    type: integer
                  size:
                    format: int64
                    type: integer
                  source:
                    description: Source represents the source of current rules
                    type: string
                  type:
                    description: IOChaosType represents the type of an IOChaos Action
                    type: string
                  uid:
                    format: int32
                    type: integer
                required:
                - path
                - percent
                - type
                type: object
              type: array
            container:
              description: 'TODO: support multiple different container to inject in
                one pod'
              type: string
            volumeMountPath:
              description: 'VolumeMountPath represents the target mount path It must
                be a root of mount path now. TODO: search the mount parent of any
                path automatically. TODO: support multiple different volume mount
                path in one pod'
              type: string
          required:
          - volumeMountPath
          type: object
        status:
          properties:
            failedMessage:
              type: string
            observedGeneration:
              format: int64
              type: integer
            pid:
              description: Pid represents a running toda process id
              format: int64
              type: integer
            startTime:
              description: StartTime represents the start time of a toda process
              format: int64
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: podnetworkchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodNetworkChaos
    listKind: PodNetworkChaosList
    plural: podnetworkchaos
    singular: podnetworkchaos
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PodNetworkChaos is the Schema for the PodNetworkChaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a pod chaos experiment
          properties:
            ipsets:
              description: The ipset on the pod
              items:
                description: RawIPSet represents an ipset on specific pod
                properties:
                  cidrs:
                    description: The contents of ipset
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of ipset
                    type: string
                  source:
                    type: string
                required:
                - cidrs
                - name
                - source
                type: object
              type: array
            iptables:
              description: The iptables rules on the pod
              items:
                description: RawIptables represents the iptables rules on specific
                  pod
                properties:
                  direction:
                    description: The block direction of this iptables rule
                    type: string
                  ipsets:
                    description: The name of related ipset
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of iptables chain
                    type: string
                  source:
                    type: string
                required:
                - direction
                - ipsets
                - name
                - source
                type: object
              type: array
            tcs:
              description: The tc rules on the pod
              items:
                description: RawTrafficControl represents the traffic control chaos
                  on specific pod
                properties:
                  bandwidth:
                    description: Bandwidth represents the detail about bandwidth control
                      action
                    properties:
                      buffer:
                        description: Buffer is the maximum amount of bytes that tokens
                          can be available for instantaneously.
                        format: int32
                        minimum: 1
                        type: integer
                      limit:
                        description: Limit is the number of bytes that can be queued
                          waiting for tokens to become available.
                        format: int32
                        minimum: 1
                        type: integer
                      minburst:
                        description: Minburst specifies the size of the peakrate bucket.
                          For perfect accuracy, should be set to the MTU of the interface.  If
                          a peakrate is needed, but some burstiness is acceptable,
                          this size can be raised. A 3000 byte minburst allows around
                          3mbit/s of peakrate, given 1000 byte packets.
                        format: int32
                        minimum: 0
                        type: integer
                      peakrate:
                        description: Peakrate is the maximum depletion rate of the
                          bucket. The peakrate does not need to be set, it is only
                          necessary if perfect millisecond timescale shaping is required.
                        format: int64
                        minimum: 0
                        type: integer
                      rate:
                        description: Rate is the speed knob. Allows bps, kbps, mbps,
                          gbps, tbps unit. bps means bytes per second.
                        type: string
                    required:
                    - buffer
                    - limit
                    - rate
                    type: object
                  corrupt:
                    description: Corrupt represents the detail about corrupt action
                    properties:
                      correlation:
                        type: string
                      corrupt:
                        type: string
                    required:
                    - correlation
                    - corrupt
                    type: object
                  delay:
                    description: Delay represents the detail about delay action
                    properties:
                      correlation:
                        type: string
                      jitter:
                        type: string
                      latency:
                        type: string
                      reorder:
                        description: ReorderSpec defines details of packet reorder.
                        properties:
                          correlation:
                            type: string
                          gap:
                            type: integer
                          reorder:
                            type: string
                        required:
                        - correlation
                        - gap
                        - reorder
                        type: object
                    required:
                    - latency
                    type: object
                  duplicate:
                    description: DuplicateSpec represents the detail about loss action
                    properties:
                      correlation:
                        type: string
                      duplicate:
                        type: string
                    required:
                    - correlation
                    - duplicate
                    type: object
                  ipset:
                    description: The name of target ipset
                    type: string
                  loss:
                    description: Loss represents the detail about loss action
                    properties:
                      correlation:
                        type: string
                      loss:
                        type: string
                    required:
                    - correlation
                    - loss
                    type: object
                  source:
                    description: The name and namespace of the source network chaos
                    type: string
                  type:
                    description: The type of traffic control
                    type: string
                required:
                - source
                - type
                type: object
              type: array
          type: object
        status:
          description: Most recently observed status of the chaos experiment about
            pods
          properties:
            failedMessage:
              type: string
            observedGeneration:
              format: int64
              type: integer
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: schedules.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: Schedule
    listKind: ScheduleList
    plural: schedules
    singular: schedule
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Schedule is the cronly schedule object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ScheduleSpec is the specification of a schedule object
          properties:
            awsChaos:
              description: AwsChaosSpec is the content of the specification for an
                AwsChaos
              properties:
                action:
                  description: 'Action defines the specific aws chaos action. Supported
                    action: ec2-stop / ec2-restart / detach-volume Default action:
                    ec2-stop'
                  enum:
                  - ec2-stop
                  - ec2-restart
                  - detach-volume
                  type: string
                awsRegion:
                  description: AwsRegion defines the region of aws.
                  type: string
                deviceName:
                  description: DeviceName indicates the name of the device. Needed
                    in detach-volume.
                  type: string
                duration:
                  description: Duration represents the duration of the chaos action.
                  type: string
                ec2Instance:
                  description: Ec2Instance indicates the ID of the ec2 instance.
                  type: string
                endpoint:
                  description: Endpoint indicates the endpoint of the aws server.
                    Just used it in test now.
                  type: string
                secretName:
                  description: SecretName defines the name of kubernetes secret.
                  type: string
                volumeID:
                  description: EbsVolume indicates the ID of the EBS volume. Needed
                    in detach-volume.
                  type: string
              required:
              - action
              - awsRegion
              - ec2Instance
              type: object
            concurrencyPolicy:
              enum:
              - Forbid
              - Allow
              type: string
            dnsChaos:
              description: DNSChaosSpec defines the desired state of DNSChaos
              properties:
                action:
                  description: 'Action defines the specific DNS chaos action. Supported
                    action: error, random Default action: error'
                  enum:
                  - error
                  - random
                  type: string
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                patterns:
                  description: "Choose which domain names to take effect, support
                    the placeholder ? and wildcard *, or the Specified domain name.
                    Note:      1. The wildcard * must be at the end of the string.
                    For example, chaos-*.org is invalid.      2. if the patterns is
                    empty, will take effect on all the domain names. For example:
                    \t\tThe value is [\"google.com\", \"github.*\", \"chaos-mes?.org\"],
                    \t\twill take effect on \"google.com\", \"github.com\" and \"chaos-mesh.org\""
                  items:
                    type: string
                  type: array
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - action
              - mode
              - selector
              type: object
            gcpChaos:
              description: GcpChaosSpec is the content of the specification for a
                GcpChaos
              properties:
                action:
                  description: 'Action defines the specific gcp chaos action. Supported
                    action: node-stop / node-reset / disk-loss Default action: node-stop'
                  enum:
                  - node-stop
                  - node-reset
                  - disk-loss
                  type: string
                deviceNames:
                  description: The device name of disks to detach. Needed in disk-loss.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action.
                  type: string
                instance:
                  description: Instance defines the name of the instance
                  type: string
                project:
                  description: Project defines the name of gcp project.
                  type: string
                secretName:
                  description: SecretName defines the name of kubernetes secret. It
                    is used for GCP credentials.
                  type: string
                zone:
                  description: Zone defines the zone of gcp project.
                  type: string
              required:
              - action
              - instance
              - project
              - zone
              type: object
            historyLimit:
              minimum: 1
              type: integer
            httpChaos:
              properties:
                abort:
                  description: Abort is a rule to abort a http session.
                  type: boolean
                code:
                  description: Code is a rule to select target by http status code
                    in response.
                  format: int32
                  type: integer
                delay:
                  description: Delay represents the delay of the target request/response.
                    A duration string is a possibly unsigned sequence of decimal numbers,
                    each with optional fraction and a unit suffix, such as "300ms",
                    "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s",
                    "m", "h".
                  type: string
                duration:
                  description: Duration represents the duration of the chaos action.
                  type: string
                method:
                  description: Method is a rule to select target by http method in
                    request.
                  type: string
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                patch:
                  description: Patch is a rule to patch some contents in target.
                  properties:
                    body:
                      description: Body is a rule to patch message body of target.
                      properties:
                        type:
                          description: Type represents the patch type, only support
                            `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                            currently.
                          type: string
                        value:
                          description: Value is the patch contents.
                          type: string
                      required:
                      - type
                      - value
                      type: object
                    headers:
                      description: 'Headers is a rule to append http headers of target.
                        For example: `[["Set-Cookie", "<one cookie>"], ["Set-Cookie",
                        "<another cookie>"]]`.'
                      items:
                        items:
                          type: string
                        type: array
                      type: array
                    queries:
                      description: 'Queries is a rule to append uri queries of target(Request
                        only). For example: `[["foo", "bar"], ["foo", "unknown"]]`.'
                      items:
                        items:
                          type: string
                        type: array
                      type: array
                  type: object
                path:
                  description: Path is a rule to select target by uri path in http
                    request.
                  type: string
                port:
                  description: Port represents the target port to be proxy of.
                  format: int32
                  type: integer
                replace:
                  description: Replace is a rule to replace some contents in target.
                  properties:
                    body:
                      description: Body is a rule to replace http message body in
                        target.
                      format: byte
                      type: string
                    code:
                      description: Code is a rule to replace http status code in response.
                      format: int32
                      type: integer
                    headers:
                      additionalProperties:
                        type: string
                      description: Headers is a rule to replace http headers of target.
                        The key-value pairs represent header name and header value
                        pairs.
                      type: object
                    method:
                      description: Method is a rule to replace http method in request.
                      type: string
                    path:
                      description: Path is rule to to replace uri path in http request.
                      type: string
                    queries:
                      additionalProperties:
                        type: string
                      description: 'Queries is a rule to replace uri queries in http
                        request. For example, with value `{ "foo": "unknown" }`, the
                        `/?foo=bar` will be altered to `/?foo=unknown`,'
                      type: object
                  type: object
                request_headers:
                  additionalProperties:
                    type: string
                  description: RequestHeaders is a rule to select target by http headers
                    in request. The key-value pairs represent header name and header
                    value pairs.
                  type: object
                response_headers:
                  additionalProperties:
                    type: string
                  description: ResponseHeaders is a rule to select target by http
                    headers in response. The key-value pairs represent header name
                    and header value pairs.
                  type: object
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                target:
                  description: Target is the object to be selected and injected.
                  enum:
                  - Request
                  - Response
                  type: string
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - mode
              - selector
              - target
              type: object
            ioChaos:
              description: IOChaosSpec defines the desired state of IOChaos
              properties:
                action:
                  description: 'Action defines the specific pod chaos action. Supported
                    action: latency / fault / attrOverride / mistake'
                  enum:
                  - latency
                  - fault
                  - attrOverride
                  - mistake
                  type: string
                attr:
                  description: Attr defines the overrided attribution
                  properties:
                    atime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    blocks:
                      format: int64
                      type: integer
                    ctime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    gid:
                      format: int32
                      type: integer
                    ino:
                      format: int64
                      type: integer
                    kind:
                      description: FileType represents type of a file
                      type: string
                    mtime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    nlink:
                      format: int32
                      type: integer
                    perm:
                      type: integer
                    rdev:
                      format: int32
                      type: integer
                    size:
                      format: int64
                      type: integer
                    uid:
                      format: int32
                      type: integer
                  type: object
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                delay:
                  description: Delay defines the value of I/O chaos action delay.
                    A delay string is a possibly signed sequence of decimal numbers,
                    each with optional fraction and a unit suffix, such as "300ms".
                    Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                  type: string
                duration:
                  description: Duration represents the duration of the chaos action.
                    It is required when the action is `PodFailureAction`. A duration
                    string is a possibly signed sequence of decimal numbers, each
                    with optional fraction and a unit suffix, such as "300ms", "-1.5h"
                    or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s",
                    "m", "h".
                  type: string
                errno:
                  description: 'Errno defines the error code that returned by I/O
                    action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
                  format: int32
                  type: integer
                methods:
                  description: 'Methods defines the I/O methods for injecting I/O
                    chaos action. default: all I/O methods.'
                  items:
                    type: string
                  type: array
                mistake:
                  description: Mistake defines what types of incorrectness are injected
                    to IO operations
                  properties:
                    filling:
                      description: Filling determines what is filled in the miskate
                        data.
                      enum:
                      - zero
                      - random
                      type: string
                    maxLength:
                      description: Max length of each wrong data segment in bytes
                      format: int64
                      minimum: 1
                      type: integer
                    maxOccurrences:
                      description: There will be [1, MaxOccurrences] segments of wrong
                        data.
                      format: int64
                      minimum: 1
                      type: integer
                  type: object
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                path:
                  description: Path defines the path of files for injecting I/O chaos
                    action.
                  type: string
                percent:
                  description: 'Percent defines the percentage of injection errors
                    and provides a number from 0-100. default: 100.'
                  type: integer
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
                volumePath:
                  description: VolumePath represents the mount path of injected volume
                  type: string
              required:
              - action
              - mode
              - selector
              - volumePath
              type: object
            jvmChaos:
              description: JVMChaosSpec defines the desired state of JVMChaos
              properties:
                action:
                  description: 'Action defines the specific jvm chaos action. Supported
                    action: delay;return;script;cfl;oom;ccf;tce;cpf;tde;tpf'
                  enum:
                  - delay
                  - return
                  - script
                  - cfl
                  - oom
                  - ccf
                  - tce
                  - cpf
                  - tde
                  - tpf
                  type: string
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                flags:
                  additionalProperties:
                    type: string
                  description: Flags represents the flags of action
                  type: object
                matchers:
                  additionalProperties:
                    type: string
                  description: Matchers represents the matching rules for the target
                  type: object
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                target:
                  description: 'Target defines the specific jvm chaos target. Supported
                    target: servlet;psql;jvm;jedis;http;dubbo;rocketmq;tars;mysql;druid;redisson;rabbitmq;mongodb'
                  enum:
                  - servlet
                  - psql
                  - jvm
                  - jedis
                  - http
                  - dubbo
                  - rocketmq
                  - tars
                  - mysql
                  - druid
                  - redisson
                  - rabbitmq
                  - mongodb
                  type: string
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - action
              - mode
              - selector
              - target
              type: object
            kernelChaos:
              description: KernelChaosSpec defines the desired state of KernelChaos
              properties:
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                failKernRequest:
                  description: FailKernRequest defines the request of kernel injection
                  properties:
                    callchain:
                      description: 'Callchain indicate a special call chain, such
                        as:     ext4_mount       -> mount_subtree          -> ...             ->
                        should_failslab With an optional set of predicates and an
                        optional set of parameters, which used with predicates. You
                        can read call chan and predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                        to learn more. If no special call chain, just keep Callchain
                        empty, which means it will fail at any call chain with slab
                        alloc (eg: kmalloc).'
                      items:
                        description: Frame defines the function signature and predicate
                          in function's body
                        properties:
                          funcname:
                            description: Funcname can be find from kernel source or
                              `/proc/kallsyms`, such as `ext4_mount`
                            type: string
                          parameters:
                            description: Parameters is used with predicate, for example,
                              if you want to inject slab error in `d_alloc_parallel(struct
                              dentry *parent, const struct qstr *name)` with a special
                              name `bananas`, you need to set it to `struct dentry
                              *parent, const struct qstr *name` otherwise omit it.
                            type: string
                          predicate:
                            description: Predicate will access the arguments of this
                              Frame, example with Parameters's, you can set it to
                              `STRNCMP(name->name, "bananas", 8)` to make inject only
                              with it, or omit it to inject for all d_alloc_parallel
                              call chain.
                            type: string
                        type: object
                      type: array
                    failtype:
                      description: 'FailType indicates what to fail, can be set to
                        ''0'' / ''1'' / ''2'' If `0`, indicates slab to fail (should_failslab)
                        If `1`, indicates alloc_page to fail (should_fail_alloc_page)
                        If `2`, indicates bio to fail (should_fail_bio) You can read:   1.
                        https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                        http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                        to learn more'
                      format: int32
                      maximum: 2
                      minimum: 0
                      type: integer
                    headers:
                      description: 'Headers indicates the appropriate kernel headers
                        you need. Eg: "linux/mmzone.h", "linux/blkdev.h" and so on'
                      items:
                        type: string
                      type: array
                    probability:
                      description: Probability indicates the fails with probability.
                        If you want 1%, please set this field with 1.
                      format: int32
                      maximum: 100
                      minimum: 0
                      type: integer
                    times:
                      description: Times indicates the max times of fails.
                      format: int32
                      minimum: 0
                      type: integer
                  required:
                  - failtype
                  type: object
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - failKernRequest
              - mode
              - selector
              type: object
            networkChaos:
              description: NetworkChaosSpec defines the desired state of NetworkChaos
              properties:
                action:
                  description: 'Action defines the specific network chaos action.
                    Supported action: partition, netem, delay, loss, duplicate, corrupt
                    Default action: delay'
                  enum:
                  - netem
                  - delay
                  - loss
                  - duplicate
                  - corrupt
                  - partition
                  - bandwidth
                  type: string
                bandwidth:
                  description: Bandwidth represents the detail about bandwidth control
                    action
                  properties:
                    buffer:
                      description: Buffer is the maximum amount of bytes that tokens
                        can be available for instantaneously.
                      format: int32
                      minimum: 1
                      type: integer
                    limit:
                      description: Limit is the number of bytes that can be queued
                        waiting for tokens to become available.
                      format: int32
                      minimum: 1
                      type: integer
                    minburst:
                      description: Minburst specifies the size of the peakrate bucket.
                        For perfect accuracy, should be set to the MTU of the interface.  If
                        a peakrate is needed, but some burstiness is acceptable, this
                        size can be raised. A 3000 byte minburst allows around 3mbit/s
                        of peakrate, given 1000 byte packets.
                      format: int32
                      minimum: 0
                      type: integer
                    peakrate:
                      description: Peakrate is the maximum depletion rate of the bucket.
                        The peakrate does not need to be set, it is only necessary
                        if perfect millisecond timescale shaping is required.
                      format: int64
                      minimum: 0
                      type: integer
                    rate:
                      description: Rate is the speed knob. Allows bps, kbps, mbps,
                        gbps, tbps unit. bps means bytes per second.
                      type: string
                  required:
                  - buffer
                  - limit
                  - rate
                  type: object
                corrupt:
                  description: Corrupt represents the detail about corrupt action
                  properties:
                    correlation:
                      type: string
                    corrupt:
                      type: string
                  required:
                  - correlation
                  - corrupt
                  type: object
                delay:
                  description: Delay represents the detail about delay action
                  properties:
                    correlation:
                      type: string
                    jitter:
                      type: string
                    latency:
                      type: string
                    reorder:
                      description: ReorderSpec defines details of packet reorder.
                      properties:
                        correlation:
                          type: string
                        gap:
                          type: integer
                        reorder:
                          type: string
                      required:
                      - correlation
                      - gap
                      - reorder
                      type: object
                  required:
                  - latency
                  type: object
                direction:
                  description: Direction represents the direction, this applies on
                    netem and network partition action
                  enum:
                  - to
                  - from
                  - both
                  - ""
                  type: string
                duplicate:
                  description: DuplicateSpec represents the detail about loss action
                  properties:
                    correlation:
                      type: string
                    duplicate:
                      type: string
                  required:
                  - correlation
                  - duplicate
                  type: object
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                externalTargets:
                  description: ExternalTargets represents network targets outside
                    k8s
                  items:
                    type: string
                  type: array
                loss:
                  description: Loss represents the detail about loss action
                  properties:
                    correlation:
                      type: string
                    loss:
                      type: string
                  required:
                  - correlation
                  - loss
                  type: object
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                target:
                  description: Target represents network target, this applies on netem
                    and network partition action
                  properties:
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                        mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                      - one
                      - all
                      - fixed
                      - fixed-percent
                      - random-max-percent
                      type: string
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that
                            can be used to select objects. A list of selectors based
                            on set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of
                            a pod at the current time. supported value: Pending /
                            Running / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod
                            names.
                          type: object
                      type: object
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods
                        the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to
                        do chaos action
                      type: string
                  required:
                  - mode
                  - selector
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - action
              - mode
              - selector
              type: object
            podChaos:
              description: PodChaosSpec defines the attributes that a user creates
                on a chaos experiment about pods.
              properties:
                action:
                  description: 'Action defines the specific pod chaos action. Supported
                    action: pod-kill / pod-failure / container-kill Default action:
                    pod-kill'
                  enum:
                  - pod-kill
                  - pod-failure
                  - container-kill
                  type: string
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action.
                    It is required when the action is `PodFailureAction`. A duration
                    string is a possibly signed sequence of decimal numbers, each
                    with optional fraction and a unit suffix, such as "300ms", "-1.5h"
                    or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s",
                    "m", "h".
                  type: string
                gracePeriod:
                  description: GracePeriod is used in pod-kill action. It represents
                    the duration in seconds before the pod should be deleted. Value
                    must be non-negative integer. The default value is zero that indicates
                    delete immediately.
                  format: int64
                  minimum: 0
                  type: integer
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - action
              - mode
              - selector
              type: object
            schedule:
              type: string
            startingDeadlineSeconds:
              format: int64
              minimum: 0
              nullable: true
              type: integer
            stressChaos:
              description: StressChaosSpec defines the desired state of StressChaos
              properties:
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                stressngStressors:
                  description: StressngStressors defines plenty of stressors just
                    like `Stressors` except that it's an experimental feature and
                    more powerful. You can define stressors in `stress-ng` (see also
                    `man stress-ng`) dialect, however not all of the supported stressors
                    are well tested. It maybe retired in later releases. You should
                    always use `Stressors` to define the stressors and use this only
                    when you want more stressors unsupported by `Stressors`. When
                    both `StressngStressors` and `Stressors` are defined, `StressngStressors`
                    wins.
                  type: string
                stressors:
                  description: Stressors defines plenty of stressors supported to
                    stress system components out. You can use one or more of them
                    to make up various kinds of stresses. At least one of the stressors
                    should be specified.
                  properties:
                    cpu:
                      description: CPUStressor stresses CPU out
                      properties:
                        load:
                          description: Load specifies P percent loading per CPU worker.
                            0 is effectively a sleep (no load) and 100 is full loading.
                          type: integer
                        options:
                          description: extend stress-ng options
                          items:
                            type: string
                          type: array
                        workers:
                          description: Workers specifies N workers to apply the stressor.
                          type: integer
                      required:
                      - workers
                      type: object
                    memory:
                      description: MemoryStressor stresses virtual memory out
                      properties:
                        options:
                          description: extend stress-ng options
                          items:
                            type: string
                          type: array
                        size:
                          description: Size specifies N bytes consumed per vm worker,
                            default is the total available memory. One can specify
                            the size as % of total available memory or in units of
                            B, KB/KiB, MB/MiB, GB/GiB, TB/TiB.
                          type: string
                        workers:
                          description: Workers specifies N workers to apply the stressor.
                          type: integer
                      required:
                      - workers
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - mode
              - selector
              type: object
            timeChaos:
              description: TimeChaosSpec defines the desired state of TimeChaos
              properties:
                clockIds:
                  description: ClockIds defines all affected clock id All available
                    options are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
                    "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
                    "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
                  items:
                    type: string
                  type: array
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                timeOffset:
                  description: TimeOffset defines the delta time of injected program.
                    It's a possibly signed sequence of decimal numbers, such as "300ms",
                    "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"),
                    "ms", "s", "m", "h".
                  type: string
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - mode
              - selector
              - timeOffset
              type: object
            type:
              description: 'TODO: use a custom type, as `TemplateType` contains other
                possible values'
              type: string
            workflow:
              properties:
                entry:
                  type: string
                templates:
                  items:
                    properties:
                      awsChaos:
                        description: AwsChaosSpec is the content of the specification
                          for an AwsChaos
                        properties:
                          action:
                            description: 'Action defines the specific aws chaos action.
                              Supported action: ec2-stop / ec2-restart / detach-volume
                              Default action: ec2-stop'
                            enum:
                            - ec2-stop
                            - ec2-restart
                            - detach-volume
                            type: string
                          awsRegion:
                            description: AwsRegion defines the region of aws.
                            type: string
                          deviceName:
                            description: DeviceName indicates the name of the device.
                              Needed in detach-volume.
                            type: string
                          duration:
                            description: Duration represents the duration of the chaos
                              action.
                            type: string
                          ec2Instance:
                            description: Ec2Instance indicates the ID of the ec2 instance.
                            type: string
                          endpoint:
                            description: Endpoint indicates the endpoint of the aws
                              server. Just used it in test now.
                            type: string
                          secretName:
                            description: SecretName defines the name of kubernetes
                              secret.
                            type: string
                          volumeID:
                            description: EbsVolume indicates the ID of the EBS volume.
                              Needed in detach-volume.
                            type: string
                        required:
                        - action
                        - awsRegion
                        - ec2Instance
                        type: object
                      dnsChaos:
                        description: DNSChaosSpec defines the desired state of DNSChaos
                        properties:
                          action:
                            description: 'Action defines the specific DNS chaos action.
                              Supported action: error, random Default action: error'
                            enum:
                            - error
                            - random
                            type: string
                          containerNames:
                            description: ContainerName indicates the name of affected
                              container. If not set, all containers will be injected
                            items:
                              type: string
                            type: array
                          duration:
                            description: Duration represents the duration of the chaos
                              action
                            type: string
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          patterns:
                            description: "Choose which domain names to take effect,
                              support the placeholder ? and wildcard *, or the Specified
                              domain name. Note:      1. The wildcard * must be at
                              the end of the string. For example, chaos-*.org is invalid.
                              \     2. if the patterns is empty, will take effect
                              on all the domain names. For example: \t\tThe value
                              is [\"google.com\", \"github.*\", \"chaos-mes?.org\"],
                              \t\twill take effect on \"google.com\", \"github.com\"
                              and \"chaos-mesh.org\""
                            items:
                              type: string
                            type: array
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - action
                        - mode
                        - selector
                        type: object
                      duration:
                        type: string
                      gcpChaos:
                        description: GcpChaosSpec is the content of the specification
                          for a GcpChaos
                        properties:
                          action:
                            description: 'Action defines the specific gcp chaos action.
                              Supported action: node-stop / node-reset / disk-loss
                              Default action: node-stop'
                            enum:
                            - node-stop
                            - node-reset
                            - disk-loss
                            type: string
                          deviceNames:
                            description: The device name of disks to detach. Needed
                              in disk-loss.
                            items:
                              type: string
                            type: array
                          duration:
                            description: Duration represents the duration of the chaos
                              action.
                            type: string
                          instance:
                            description: Instance defines the name of the instance
                            type: string
                          project:
                            description: Project defines the name of gcp project.
                            type: string
                          secretName:
                            description: SecretName defines the name of kubernetes
                              secret. It is used for GCP credentials.
                            type: string
                          zone:
                            description: Zone defines the zone of gcp project.
                            type: string
                        required:
                        - action
                        - instance
                        - project
                        - zone
                        type: object
                      httpChaos:
                        properties:
                          abort:
                            description: Abort is a rule to abort a http session.
                            type: boolean
                          code:
                            description: Code is a rule to select target by http status
                              code in response.
                            format: int32
                            type: integer
                          delay:
                            description: Delay represents the delay of the target
                              request/response. A duration string is a possibly unsigned
                              sequence of decimal numbers, each with optional fraction
                              and a unit suffix, such as "300ms", "2h45m". Valid time
                              units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                            type: string
                          duration:
                            description: Duration represents the duration of the chaos
                              action.
                            type: string
                          method:
                            description: Method is a rule to select target by http
                              method in request.
                            type: string
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          patch:
                            description: Patch is a rule to patch some contents in
                              target.
                            properties:
                              body:
                                description: Body is a rule to patch message body
                                  of target.
                                properties:
                                  type:
                                    description: Type represents the patch type, only
                                      support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                                      currently.
                                    type: string
                                  value:
                                    description: Value is the patch contents.
                                    type: string
                                required:
                                - type
                                - value
                                type: object
                              headers:
                                description: 'Headers is a rule to append http headers
                                  of target. For example: `[["Set-Cookie", "<one cookie>"],
                                  ["Set-Cookie", "<another cookie>"]]`.'
                                items:
                                  items:
                                    type: string
                                  type: array
                                type: array
                              queries:
                                description: 'Queries is a rule to append uri queries
                                  of target(Request only). For example: `[["foo",
                                  "bar"], ["foo", "unknown"]]`.'
                                items:
                                  items:
                                    type: string
                                  type: array
                                type: array
                            type: object
                          path:
                            description: Path is a rule to select target by uri path
                              in http request.
                            type: string
                          port:
                            description: Port represents the target port to be proxy
                              of.
                            format: int32
                            type: integer
                          replace:
                            description: Replace is a rule to replace some contents
                              in target.
                            properties:
                              body:
                                description: Body is a rule to replace http message
                                  body in target.
                                format: byte
                                type: string
                              code:
                                description: Code is a rule to replace http status
                                  code in response.
                                format: int32
                                type: integer
                              headers:
                                additionalProperties:
                                  type: string
                                description: Headers is a rule to replace http headers
                                  of target. The key-value pairs represent header
                                  name and header value pairs.
                                type: object
                              method:
                                description: Method is a rule to replace http method
                                  in request.
                                type: string
                              path:
                                description: Path is rule to to replace uri path in
                                  http request.
                                type: string
                              queries:
                                additionalProperties:
                                  type: string
                                description: 'Queries is a rule to replace uri queries
                                  in http request. For example, with value `{ "foo":
                                  "unknown" }`, the `/?foo=bar` will be altered to
                                  `/?foo=unknown`,'
                                type: object
                            type: object
                          request_headers:
                            additionalProperties:
                              type: string
                            description: RequestHeaders is a rule to select target
                              by http headers in request. The key-value pairs represent
                              header name and header value pairs.
                            type: object
                          response_headers:
                            additionalProperties:
                              type: string
                            description: ResponseHeaders is a rule to select target
                              by http headers in response. The key-value pairs represent
                              header name and header value pairs.
                            type: object
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          target:
                            description: Target is the object to be selected and injected.
                            enum:
                            - Request
                            - Response
                            type: string
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - mode
                        - selector
                        - target
                        type: object
                      ioChaos:
                        description: IOChaosSpec defines the desired state of IOChaos
                        properties:
                          action:
                            description: 'Action defines the specific pod chaos action.
                              Supported action: latency / fault / attrOverride / mistake'
                            enum:
                            - latency
                            - fault
                            - attrOverride
                            - mistake
                            type: string
                          attr:
                            description: Attr defines the overrided attribution
                            properties:
                              atime:
                                description: Timespec represents a time
                                properties:
                                  nsec:
                                    format: int64
                                    type: integer
                                  sec:
                                    format: int64
                                    type: integer
                                required:
                                - nsec
                                - sec
                                type: object
                              blocks:
                                format: int64
                                type: integer
                              ctime:
                                description: Timespec represents a time
                                properties:
                                  nsec:
                                    format: int64
                                    type: integer
                                  sec:
                                    format: int64
                                    type: integer
                                required:
                                - nsec
                                - sec
                                type: object
                              gid:
                                format: int32
                                type: integer
                              ino:
                                format: int64
                                type: integer
                              kind:
                                description: FileType represents type of a file
                                type: string
                              mtime:
                                description: Timespec represents a time
                                properties:
                                  nsec:
                                    format: int64
                                    type: integer
                                  sec:
                                    format: int64
                                    type: integer
                                required:
                                - nsec
                                - sec
                                type: object
                              nlink:
                                format: int32
                                type: integer
                              perm:
                                type: integer
                              rdev:
                                format: int32
                                type: integer
                              size:
                                format: int64
                                type: integer
                              uid:
                                format: int32
                                type: integer
                            type: object
                          containerNames:
                            description: ContainerName indicates the name of affected
                              container. If not set, all containers will be injected
                            items:
                              type: string
                            type: array
                          delay:
                            description: Delay defines the value of I/O chaos action
                              delay. A delay string is a possibly signed sequence
                              of decimal numbers, each with optional fraction and
                              a unit suffix, such as "300ms". Valid time units are
                              "ns", "us" (or "µs"), "ms", "s", "m", "h".
                            type: string
                          duration:
                            description: Duration represents the duration of the chaos
                              action. It is required when the action is `PodFailureAction`.
                              A duration string is a possibly signed sequence of decimal
                              numbers, each with optional fraction and a unit suffix,
                              such as "300ms", "-1.5h" or "2h45m". Valid time units
                              are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                            type: string
                          errno:
                            description: 'Errno defines the error code that returned
                              by I/O action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
                            format: int32
                            type: integer
                          methods:
                            description: 'Methods defines the I/O methods for injecting
                              I/O chaos action. default: all I/O methods.'
                            items:
                              type: string
                            type: array
                          mistake:
                            description: Mistake defines what types of incorrectness
                              are injected to IO operations
                            properties:
                              filling:
                                description: Filling determines what is filled in
                                  the miskate data.
                                enum:
                                - zero
                                - random
                                type: string
                              maxLength:
                                description: Max length of each wrong data segment
                                  in bytes
                                format: int64
                                minimum: 1
                                type: integer
                              maxOccurrences:
                                description: There will be [1, MaxOccurrences] segments
                                  of wrong data.
                                format: int64
                                minimum: 1
                                type: integer
                            type: object
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          path:
                            description: Path defines the path of files for injecting
                              I/O chaos action.
                            type: string
                          percent:
                            description: 'Percent defines the percentage of injection
                              errors and provides a number from 0-100. default: 100.'
                            type: integer
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                          volumePath:
                            description: VolumePath represents the mount path of injected
                              volume
                            type: string
                        required:
                        - action
                        - mode
                        - selector
                        - volumePath
                        type: object
                      jvmChaos:
                        description: JVMChaosSpec defines the desired state of JVMChaos
                        properties:
                          action:
                            description: 'Action defines the specific jvm chaos action.
                              Supported action: delay;return;script;cfl;oom;ccf;tce;cpf;tde;tpf'
                            enum:
                            - delay
                            - return
                            - script
                            - cfl
                            - oom
                            - ccf
                            - tce
                            - cpf
                            - tde
                            - tpf
                            type: string
                          containerNames:
                            description: ContainerName indicates the name of affected
                              container. If not set, all containers will be injected
                            items:
                              type: string
                            type: array
                          duration:
                            description: Duration represents the duration of the chaos
                              action
                            type: string
                          flags:
                            additionalProperties:
                              type: string
                            description: Flags represents the flags of action
                            type: object
                          matchers:
                            additionalProperties:
                              type: string
                            description: Matchers represents the matching rules for
                              the target
                            type: object
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          target:
                            description: 'Target defines the specific jvm chaos target.
                              Supported target: servlet;psql;jvm;jedis;http;dubbo;rocketmq;tars;mysql;druid;redisson;rabbitmq;mongodb'
                            enum:
                            - servlet
                            - psql
                            - jvm
                            - jedis
                            - http
                            - dubbo
                            - rocketmq
                            - tars
                            - mysql
                            - druid
                            - redisson
                            - rabbitmq
                            - mongodb
                            type: string
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - action
                        - mode
                        - selector
                        - target
                        type: object
                      kernelChaos:
                        description: KernelChaosSpec defines the desired state of
                          KernelChaos
                        properties:
                          duration:
                            description: Duration represents the duration of the chaos
                              action
                            type: string
                          failKernRequest:
                            description: FailKernRequest defines the request of kernel
                              injection
                            properties:
                              callchain:
                                description: 'Callchain indicate a special call chain,
                                  such as:     ext4_mount       -> mount_subtree          ->
                                  ...             -> should_failslab With an optional
                                  set of predicates and an optional set of parameters,
                                  which used with predicates. You can read call chan
                                  and predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                                  to learn more. If no special call chain, just keep
                                  Callchain empty, which means it will fail at any
                                  call chain with slab alloc (eg: kmalloc).'
                                items:
                                  description: Frame defines the function signature
                                    and predicate in function's body
                                  properties:
                                    funcname:
                                      description: Funcname can be find from kernel
                                        source or `/proc/kallsyms`, such as `ext4_mount`
                                      type: string
                                    parameters:
                                      description: Parameters is used with predicate,
                                        for example, if you want to inject slab error
                                        in `d_alloc_parallel(struct dentry *parent,
                                        const struct qstr *name)` with a special name
                                        `bananas`, you need to set it to `struct dentry
                                        *parent, const struct qstr *name` otherwise
                                        omit it.
                                      type: string
                                    predicate:
                                      description: Predicate will access the arguments
                                        of this Frame, example with Parameters's,
                                        you can set it to `STRNCMP(name->name, "bananas",
                                        8)` to make inject only with it, or omit it
                                        to inject for all d_alloc_parallel call chain.
                                      type: string
                                  type: object
                                type: array
                              failtype:
                                description: 'FailType indicates what to fail, can
                                  be set to ''0'' / ''1'' / ''2'' If `0`, indicates
                                  slab to fail (should_failslab) If `1`, indicates
                                  alloc_page to fail (should_fail_alloc_page) If `2`,
                                  indicates bio to fail (should_fail_bio) You can
                                  read:   1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                                  http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                                  to learn more'
                                format: int32
                                maximum: 2
                                minimum: 0
                                type: integer
                              headers:
                                description: 'Headers indicates the appropriate kernel
                                  headers you need. Eg: "linux/mmzone.h", "linux/blkdev.h"
                                  and so on'
                                items:
                                  type: string
                                type: array
                              probability:
                                description: Probability indicates the fails with
                                  probability. If you want 1%, please set this field
                                  with 1.
                                format: int32
                                maximum: 100
                                minimum: 0
                                type: integer
                              times:
                                description: Times indicates the max times of fails.
                                format: int32
                                minimum: 0
                                type: integer
                            required:
                            - failtype
                            type: object
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - failKernRequest
                        - mode
                        - selector
                        type: object
                      name:
                        type: string
                      networkChaos:
                        description: NetworkChaosSpec defines the desired state of
                          NetworkChaos
                        properties:
                          action:
                            description: 'Action defines the specific network chaos
                              action. Supported action: partition, netem, delay, loss,
                              duplicate, corrupt Default action: delay'
                            enum:
                            - netem
                            - delay
                            - loss
                            - duplicate
                            - corrupt
                            - partition
                            - bandwidth
                            type: string
                          bandwidth:
                            description: Bandwidth represents the detail about bandwidth
                              control action
                            properties:
                              buffer:
                                description: Buffer is the maximum amount of bytes
                                  that tokens can be available for instantaneously.
                                format: int32
                                minimum: 1
                                type: integer
                              limit:
                                description: Limit is the number of bytes that can
                                  be queued waiting for tokens to become available.
                                format: int32
                                minimum: 1
                                type: integer
                              minburst:
                                description: Minburst specifies the size of the peakrate
                                  bucket. For perfect accuracy, should be set to the
                                  MTU of the interface.  If a peakrate is needed,
                                  but some burstiness is acceptable, this size can
                                  be raised. A 3000 byte minburst allows around 3mbit/s
                                  of peakrate, given 1000 byte packets.
                                format: int32
                                minimum: 0
                                type: integer
                              peakrate:
                                description: Peakrate is the maximum depletion rate
                                  of the bucket. The peakrate does not need to be
                                  set, it is only necessary if perfect millisecond
                                  timescale shaping is required.
                                format: int64
                                minimum: 0
                                type: integer
                              rate:
                                description: Rate is the speed knob. Allows bps, kbps,
                                  mbps, gbps, tbps unit. bps means bytes per second.
                                type: string
                            required:
                            - buffer
                            - limit
                            - rate
                            type: object
                          corrupt:
                            description: Corrupt represents the detail about corrupt
                              action
                            properties:
                              correlation:
                                type: string
                              corrupt:
                                type: string
                            required:
                            - correlation
                            - corrupt
                            type: object
                          delay:
                            description: Delay represents the detail about delay action
                            properties:
                              correlation:
                                type: string
                              jitter:
                                type: string
                              latency:
                                type: string
                              reorder:
                                description: ReorderSpec defines details of packet
                                  reorder.
                                properties:
                                  correlation:
                                    type: string
                                  gap:
                                    type: integer
                                  reorder:
                                    type: string
                                required:
                                - correlation
                                - gap
                                - reorder
                                type: object
                            required:
                            - latency
                            type: object
                          direction:
                            description: Direction represents the direction, this
                              applies on netem and network partition action
                            enum:
                            - to
                            - from
                            - both
                            - ""
                            type: string
                          duplicate:
                            description: DuplicateSpec represents the detail about
                              loss action
                            properties:
                              correlation:
                                type: string
                              duplicate:
                                type: string
                            required:
                            - correlation
                            - duplicate
                            type: object
                          duration:
                            description: Duration represents the duration of the chaos
                              action
                            type: string
                          externalTargets:
                            description: ExternalTargets represents network targets
                              outside k8s
                            items:
                              type: string
                            type: array
                          loss:
                            description: Loss represents the detail about loss action
                            properties:
                              correlation:
                                type: string
                              loss:
                                type: string
                            required:
                            - correlation
                            - loss
                            type: object
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          target:
                            description: Target represents network target, this applies
                              on netem and network partition action
                            properties:
                              mode:
                                description: 'Mode defines the mode to run chaos action.
                                  Supported mode: one / all / fixed / fixed-percent
                                  / random-max-percent'
                                enum:
                                - one
                                - all
                                - fixed
                                - fixed-percent
                                - random-max-percent
                                type: string
                              selector:
                                description: Selector is used to select pods that
                                  are used to inject chaos action.
                                properties:
                                  annotationSelectors:
                                    additionalProperties:
                                      type: string
                                    description: Map of string keys and values that
                                      can be used to select objects. A selector based
                                      on annotations.
                                    type: object
                                  expressionSelectors:
                                    description: a slice of label selector expressions
                                      that can be used to select objects. A list of
                                      selectors based on set-based label expressions.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  fieldSelectors:
                                    additionalProperties:
                                      type: string
                                    description: Map of string keys and values that
                                      can be used to select objects. A selector based
                                      on fields.
                                    type: object
                                  labelSelectors:
                                    additionalProperties:
                                      type: string
                                    description: Map of string keys and values that
                                      can be used to select objects. A selector based
                                      on labels.
                                    type: object
                                  namespaces:
                                    description: Namespaces is a set of namespace
                                      to which objects belong.
                                    items:
                                      type: string
                                    type: array
                                  nodeSelectors:
                                    additionalProperties:
                                      type: string
                                    description: Map of string keys and values that
                                      can be used to select nodes. Selector which
                                      must match a node's labels, and objects must
                                      belong to these selected nodes.
                                    type: object
                                  nodes:
                                    description: Nodes is a set of node name and objects
                                      must belong to these nodes.
                                    items:
                                      type: string
                                    type: array
                                  podPhaseSelectors:
                                    description: 'PodPhaseSelectors is a set of condition
                                      of a pod at the current time. supported value:
                                      Pending / Running / Succeeded / Failed / Unknown'
                                    items:
                                      type: string
                                    type: array
                                  pods:
                                    additionalProperties:
                                      items:
                                        type: string
                                      type: array
                                    description: Pods is a map of string keys and
                                      a set values that used to select pods. The key
                                      defines the namespace which pods belong, and
                                      the each values is a set of pod names.
                                    type: object
                                type: object
                              value:
                                description: Value is required when the mode is set
                                  to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                                  If `FixedPodMode`, provide an integer of pods to
                                  do chaos action. If `FixedPercentPodMod`, provide
                                  a number from 0-100 to specify the percent of pods
                                  the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                                  a number from 0-100 to specify the max percent of
                                  pods to do chaos action
                                type: string
                            required:
                            - mode
                            - selector
                            type: object
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - action
                        - mode
                        - selector
                        type: object
                      podChaos:
                        description: PodChaosSpec defines the attributes that a user
                          creates on a chaos experiment about pods.
                        properties:
                          action:
                            description: 'Action defines the specific pod chaos action.
                              Supported action: pod-kill / pod-failure / container-kill
                              Default action: pod-kill'
                            enum:
                            - pod-kill
                            - pod-failure
                            - container-kill
                            type: string
                          containerNames:
                            description: ContainerName indicates the name of affected
                              container. If not set, all containers will be injected
                            items:
                              type: string
                            type: array
                          duration:
                            description: Duration represents the duration of the chaos
                              action. It is required when the action is `PodFailureAction`.
                              A duration string is a possibly signed sequence of decimal
                              numbers, each with optional fraction and a unit suffix,
                              such as "300ms", "-1.5h" or "2h45m". Valid time units
                              are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                            type: string
                          gracePeriod:
                            description: GracePeriod is used in pod-kill action. It
                              represents the duration in seconds before the pod should
                              be deleted. Value must be non-negative integer. The
                              default value is zero that indicates delete immediately.
                            format: int64
                            minimum: 0
                            type: integer
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - action
                        - mode
                        - selector
                        type: object
                      stressChaos:
                        description: StressChaosSpec defines the desired state of
                          StressChaos
                        properties:
                          containerNames:
                            description: ContainerName indicates the name of affected
                              container. If not set, all containers will be injected
                            items:
                              type: string
                            type: array
                          duration:
                            description: Duration represents the duration of the chaos
                              action
                            type: string
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          stressngStressors:
                            description: StressngStressors defines plenty of stressors
                              just like `Stressors` except that it's an experimental
                              feature and more powerful. You can define stressors
                              in `stress-ng` (see also `man stress-ng`) dialect, however
                              not all of the supported stressors are well tested.
                              It maybe retired in later releases. You should always
                              use `Stressors` to define the stressors and use this
                              only when you want more stressors unsupported by `Stressors`.
                              When both `StressngStressors` and `Stressors` are defined,
                              `StressngStressors` wins.
                            type: string
                          stressors:
                            description: Stressors defines plenty of stressors supported
                              to stress system components out. You can use one or
                              more of them to make up various kinds of stresses. At
                              least one of the stressors should be specified.
                            properties:
                              cpu:
                                description: CPUStressor stresses CPU out
                                properties:
                                  load:
                                    description: Load specifies P percent loading
                                      per CPU worker. 0 is effectively a sleep (no
                                      load) and 100 is full loading.
                                    type: integer
                                  options:
                                    description: extend stress-ng options
                                    items:
                                      type: string
                                    type: array
                                  workers:
                                    description: Workers specifies N workers to apply
                                      the stressor.
                                    type: integer
                                required:
                                - workers
                                type: object
                              memory:
                                description: MemoryStressor stresses virtual memory
                                  out
                                properties:
                                  options:
                                    description: extend stress-ng options
                                    items:
                                      type: string
                                    type: array
                                  size:
                                    description: Size specifies N bytes consumed per
                                      vm worker, default is the total available memory.
                                      One can specify the size as % of total available
                                      memory or in units of B, KB/KiB, MB/MiB, GB/GiB,
                                      TB/TiB.
                                    type: string
                                  workers:
                                    description: Workers specifies N workers to apply
                                      the stressor.
                                    type: integer
                                required:
                                - workers
                                type: object
                            type: object
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - mode
                        - selector
                        type: object
                      tasks:
                        items:
                          type: string
                        type: array
                      templateType:
                        type: string
                      timeChaos:
                        description: TimeChaosSpec defines the desired state of TimeChaos
                        properties:
                          clockIds:
                            description: ClockIds defines all affected clock id All
                              available options are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
                              "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
                              "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
                            items:
                              type: string
                            type: array
                          containerNames:
                            description: ContainerName indicates the name of affected
                              container. If not set, all containers will be injected
                            items:
                              type: string
                            type: array
                          duration:
                            description: Duration represents the duration of the chaos
                              action
                            type: string
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          timeOffset:
                            description: TimeOffset defines the delta time of injected
                              program. It's a possibly signed sequence of decimal
                              numbers, such as "300ms", "-1.5h" or "2h45m". Valid
                              time units are "ns", "us" (or "µs"), "ms", "s", "m",
                              "h".
                            type: string
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - mode
                        - selector
                        - timeOffset
                        type: object
                    required:
                    - name
                    - templateType
                    type: object
                  type: array
              required:
              - entry
              - templates
              type: object
          required:
          - schedule
          - type
          type: object
        status:
          description: ScheduleStatus is the status of a schedule object
          properties:
            active:
              items:
                description: ObjectReference contains enough information to let you
                  inspect or modify the referred object.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              type: array
            time:
              format: date-time
              nullable: true
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: stresschaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: StressChaos
    listKind: StressChaosList
    plural: stresschaos
    singular: stresschaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: StressChaos is the Schema for the stresschaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a time chaos experiment
          properties:
            containerNames:
              description: ContainerName indicates the name of affected container.
                If not set, all containers will be injected
              items:
                type: string
              type: array
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            stressngStressors:
              description: StressngStressors defines plenty of stressors just like
                `Stressors` except that it's an experimental feature and more powerful.
                You can define stressors in `stress-ng` (see also `man stress-ng`)
                dialect, however not all of the supported stressors are well tested.
                It maybe retired in later releases. You should always use `Stressors`
                to define the stressors and use this only when you want more stressors
                unsupported by `Stressors`. When both `StressngStressors` and `Stressors`
                are defined, `StressngStressors` wins.
              type: string
            stressors:
              description: Stressors defines plenty of stressors supported to stress
                system components out. You can use one or more of them to make up
                various kinds of stresses. At least one of the stressors should be
                specified.
              properties:
                cpu:
                  description: CPUStressor stresses CPU out
                  properties:
                    load:
                      description: Load specifies P percent loading per CPU worker.
                        0 is effectively a sleep (no load) and 100 is full loading.
                      type: integer
                    options:
                      description: extend stress-ng options
                      items:
                        type: string
                      type: array
                    workers:
                      description: Workers specifies N workers to apply the stressor.
                      type: integer
                  required:
                  - workers
                  type: object
                memory:
                  description: MemoryStressor stresses virtual memory out
                  properties:
                    options:
                      description: extend stress-ng options
                      items:
                        type: string
                      type: array
                    size:
                      description: Size specifies N bytes consumed per vm worker,
                        default is the total available memory. One can specify the
                        size as % of total available memory or in units of B, KB/KiB,
                        MB/MiB, GB/GiB, TB/TiB.
                      type: string
                    workers:
                      description: Workers specifies N workers to apply the stressor.
                      type: integer
                  required:
                  - workers
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the time chaos experiment
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
            instances:
              additionalProperties:
                description: StressInstance is an instance generates stresses
                properties:
                  startTime:
                    description: StartTime specifies when the instance starts
                    format: date-time
                    type: string
                  uid:
                    description: UID is the instance identifier
                    type: string
                type: object
              description: Instances always specifies stressing instances
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: timechaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: TimeChaos
    listKind: TimeChaosList
    plural: timechaos
    singular: timechaos
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: TimeChaos is the Schema for the timechaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a time chaos experiment
          properties:
            clockIds:
              description: ClockIds defines all affected clock id All available options
                are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
                "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
                "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
              items:
                type: string
              type: array
            containerNames:
              description: ContainerName indicates the name of affected container.
                If not set, all containers will be injected
              items:
                type: string
              type: array
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                expressionSelectors:
                  description: a slice of label selector expressions that can be used
                    to select objects. A list of selectors based on set-based label
                    expressions.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            timeOffset:
              description: TimeOffset defines the delta time of injected program.
                It's a possibly signed sequence of decimal numbers, such as "300ms",
                "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms",
                "s", "m", "h".
              type: string
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - mode
          - selector
          - timeOffset
          type: object
        status:
          description: Most recently observed status of the time chaos experiment
          properties:
            conditions:
              description: Conditions represents the current global condition of the
                chaos
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            experiment:
              description: Experiment records the last experiment state.
              properties:
                containerRecords:
                  description: Records are used to track the running status
                  items:
                    properties:
                      id:
                        type: string
                      phase:
                        type: string
                      selectorKey:
                        type: string
                    required:
                    - id
                    - phase
                    - selectorKey
                    type: object
                  type: array
                desiredPhase:
                  enum:
                  - Run
                  - Stop
                  type: string
              type: object
          required:
          - experiment
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: workflownodes.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: WorkflowNode
    listKind: WorkflowNodeList
    plural: workflownodes
    shortNames:
    - wfn
    singular: workflownode
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a node of workflow
          properties:
            awsChaos:
              description: AwsChaosSpec is the content of the specification for an
                AwsChaos
              properties:
                action:
                  description: 'Action defines the specific aws chaos action. Supported
                    action: ec2-stop / ec2-restart / detach-volume Default action:
                    ec2-stop'
                  enum:
                  - ec2-stop
                  - ec2-restart
                  - detach-volume
                  type: string
                attackConfiguration:
                  description: AttackConfiguration indicates the name of the attack.
                    Needed in attack-configuration.
                  type: string
                awsRegion:
                  description: AwsRegion defines the region of aws.
                  type: string
                deviceName:
                  description: DeviceName indicates the name of the device. Needed
                    in detach-volume.
                  type: string
                duration:
                  description: Duration represents the duration of the chaos action.
                  type: string
                ec2Instance:
                  description: Ec2Instance indicates the ID of the ec2 instance.
                  type: string
                endpoint:
                  description: Endpoint indicates the endpoint of the aws server.
                    Just used it in test now.
                  type: string
                secretName:
                  description: SecretName defines the name of kubernetes secret.
                  type: string
                volumeID:
                  description: EbsVolume indicates the ID of the EBS volume. Needed
                    in detach-volume.
                  type: string
              required:
              - action
              - awsRegion
              - ec2Instance
              type: object
            deadline:
              format: date-time
              type: string
            dnsChaos:
              description: DNSChaosSpec defines the desired state of DNSChaos
              properties:
                action:
                  description: 'Action defines the specific DNS chaos action. Supported
                    action: error, random Default action: error'
                  enum:
                  - error
                  - random
                  type: string
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                patterns:
                  description: "Choose which domain names to take effect, support
                    the placeholder ? and wildcard *, or the Specified domain name.
                    Note:      1. The wildcard * must be at the end of the string.
                    For example, chaos-*.org is invalid.      2. if the patterns is
                    empty, will take effect on all the domain names. For example:
                    \t\tThe value is [\"google.com\", \"github.*\", \"chaos-mes?.org\"],
                    \t\twill take effect on \"google.com\", \"github.com\" and \"chaos-mesh.org\""
                  items:
                    type: string
                  type: array
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - action
              - mode
              - selector
              type: object
            gcpChaos:
              description: GcpChaosSpec is the content of the specification for a
                GcpChaos
              properties:
                action:
                  description: 'Action defines the specific gcp chaos action. Supported
                    action: node-stop / node-reset / disk-loss Default action: node-stop'
                  enum:
                  - node-stop
                  - node-reset
                  - disk-loss
                  type: string
                deviceNames:
                  description: The device name of disks to detach. Needed in disk-loss.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action.
                  type: string
                instance:
                  description: Instance defines the name of the instance
                  type: string
                project:
                  description: Project defines the name of gcp project.
                  type: string
                secretName:
                  description: SecretName defines the name of kubernetes secret. It
                    is used for GCP credentials.
                  type: string
                zone:
                  description: Zone defines the zone of gcp project.
                  type: string
              required:
              - action
              - instance
              - project
              - zone
              type: object
            httpChaos:
              properties:
                abort:
                  description: Abort is a rule to abort a http session.
                  type: boolean
                code:
                  description: Code is a rule to select target by http status code
                    in response.
                  format: int32
                  type: integer
                delay:
                  description: Delay represents the delay of the target request/response.
                    A duration string is a possibly unsigned sequence of decimal numbers,
                    each with optional fraction and a unit suffix, such as "300ms",
                    "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s",
                    "m", "h".
                  type: string
                duration:
                  description: Duration represents the duration of the chaos action.
                  type: string
                method:
                  description: Method is a rule to select target by http method in
                    request.
                  type: string
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                patch:
                  description: Patch is a rule to patch some contents in target.
                  properties:
                    body:
                      description: Body is a rule to patch message body of target.
                      properties:
                        type:
                          description: Type represents the patch type, only support
                            `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                            currently.
                          type: string
                        value:
                          description: Value is the patch contents.
                          type: string
                      required:
                      - type
                      - value
                      type: object
                    headers:
                      description: 'Headers is a rule to append http headers of target.
                        For example: `[["Set-Cookie", "<one cookie>"], ["Set-Cookie",
                        "<another cookie>"]]`.'
                      items:
                        items:
                          type: string
                        type: array
                      type: array
                    queries:
                      description: 'Queries is a rule to append uri queries of target(Request
                        only). For example: `[["foo", "bar"], ["foo", "unknown"]]`.'
                      items:
                        items:
                          type: string
                        type: array
                      type: array
                  type: object
                path:
                  description: Path is a rule to select target by uri path in http
                    request.
                  type: string
                port:
                  description: Port represents the target port to be proxy of.
                  format: int32
                  type: integer
                replace:
                  description: Replace is a rule to replace some contents in target.
                  properties:
                    body:
                      description: Body is a rule to replace http message body in
                        target.
                      format: byte
                      type: string
                    code:
                      description: Code is a rule to replace http status code in response.
                      format: int32
                      type: integer
                    headers:
                      additionalProperties:
                        type: string
                      description: Headers is a rule to replace http headers of target.
                        The key-value pairs represent header name and header value
                        pairs.
                      type: object
                    method:
                      description: Method is a rule to replace http method in request.
                      type: string
                    path:
                      description: Path is rule to to replace uri path in http request.
                      type: string
                    queries:
                      additionalProperties:
                        type: string
                      description: 'Queries is a rule to replace uri queries in http
                        request. For example, with value `{ "foo": "unknown" }`, the
                        `/?foo=bar` will be altered to `/?foo=unknown`,'
                      type: object
                  type: object
                request_headers:
                  additionalProperties:
                    type: string
                  description: RequestHeaders is a rule to select target by http headers
                    in request. The key-value pairs represent header name and header
                    value pairs.
                  type: object
                response_headers:
                  additionalProperties:
                    type: string
                  description: ResponseHeaders is a rule to select target by http
                    headers in response. The key-value pairs represent header name
                    and header value pairs.
                  type: object
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                target:
                  description: Target is the object to be selected and injected.
                  enum:
                  - Request
                  - Response
                  type: string
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - mode
              - selector
              - target
              type: object
            ioChaos:
              description: IOChaosSpec defines the desired state of IOChaos
              properties:
                action:
                  description: 'Action defines the specific pod chaos action. Supported
                    action: latency / fault / attrOverride / mistake'
                  enum:
                  - latency
                  - fault
                  - attrOverride
                  - mistake
                  type: string
                attr:
                  description: Attr defines the overrided attribution
                  properties:
                    atime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    blocks:
                      format: int64
                      type: integer
                    ctime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    gid:
                      format: int32
                      type: integer
                    ino:
                      format: int64
                      type: integer
                    kind:
                      description: FileType represents type of a file
                      type: string
                    mtime:
                      description: Timespec represents a time
                      properties:
                        nsec:
                          format: int64
                          type: integer
                        sec:
                          format: int64
                          type: integer
                      required:
                      - nsec
                      - sec
                      type: object
                    nlink:
                      format: int32
                      type: integer
                    perm:
                      type: integer
                    rdev:
                      format: int32
                      type: integer
                    size:
                      format: int64
                      type: integer
                    uid:
                      format: int32
                      type: integer
                  type: object
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                delay:
                  description: Delay defines the value of I/O chaos action delay.
                    A delay string is a possibly signed sequence of decimal numbers,
                    each with optional fraction and a unit suffix, such as "300ms".
                    Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                  type: string
                duration:
                  description: Duration represents the duration of the chaos action.
                    It is required when the action is `PodFailureAction`. A duration
                    string is a possibly signed sequence of decimal numbers, each
                    with optional fraction and a unit suffix, such as "300ms", "-1.5h"
                    or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s",
                    "m", "h".
                  type: string
                errno:
                  description: 'Errno defines the error code that returned by I/O
                    action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
                  format: int32
                  type: integer
                methods:
                  description: 'Methods defines the I/O methods for injecting I/O
                    chaos action. default: all I/O methods.'
                  items:
                    type: string
                  type: array
                mistake:
                  description: Mistake defines what types of incorrectness are injected
                    to IO operations
                  properties:
                    filling:
                      description: Filling determines what is filled in the miskate
                        data.
                      enum:
                      - zero
                      - random
                      type: string
                    maxLength:
                      description: Max length of each wrong data segment in bytes
                      format: int64
                      minimum: 1
                      type: integer
                    maxOccurrences:
                      description: There will be [1, MaxOccurrences] segments of wrong
                        data.
                      format: int64
                      minimum: 1
                      type: integer
                  type: object
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                path:
                  description: Path defines the path of files for injecting I/O chaos
                    action.
                  type: string
                percent:
                  description: 'Percent defines the percentage of injection errors
                    and provides a number from 0-100. default: 100.'
                  type: integer
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
                volumePath:
                  description: VolumePath represents the mount path of injected volume
                  type: string
              required:
              - action
              - mode
              - selector
              - volumePath
              type: object
            jvmChaos:
              description: JVMChaosSpec defines the desired state of JVMChaos
              properties:
                action:
                  description: 'Action defines the specific jvm chaos action. Supported
                    action: delay;return;script;cfl;oom;ccf;tce;cpf;tde;tpf'
                  enum:
                  - delay
                  - return
                  - script
                  - cfl
                  - oom
                  - ccf
                  - tce
                  - cpf
                  - tde
                  - tpf
                  type: string
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                flags:
                  additionalProperties:
                    type: string
                  description: Flags represents the flags of action
                  type: object
                matchers:
                  additionalProperties:
                    type: string
                  description: Matchers represents the matching rules for the target
                  type: object
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                target:
                  description: 'Target defines the specific jvm chaos target. Supported
                    target: servlet;psql;jvm;jedis;http;dubbo;rocketmq;tars;mysql;druid;redisson;rabbitmq;mongodb'
                  enum:
                  - servlet
                  - psql
                  - jvm
                  - jedis
                  - http
                  - dubbo
                  - rocketmq
                  - tars
                  - mysql
                  - druid
                  - redisson
                  - rabbitmq
                  - mongodb
                  type: string
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - action
              - mode
              - selector
              - target
              type: object
            kernelChaos:
              description: KernelChaosSpec defines the desired state of KernelChaos
              properties:
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                failKernRequest:
                  description: FailKernRequest defines the request of kernel injection
                  properties:
                    callchain:
                      description: 'Callchain indicate a special call chain, such
                        as:     ext4_mount       -> mount_subtree          -> ...             ->
                        should_failslab With an optional set of predicates and an
                        optional set of parameters, which used with predicates. You
                        can read call chan and predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                        to learn more. If no special call chain, just keep Callchain
                        empty, which means it will fail at any call chain with slab
                        alloc (eg: kmalloc).'
                      items:
                        description: Frame defines the function signature and predicate
                          in function's body
                        properties:
                          funcname:
                            description: Funcname can be find from kernel source or
                              `/proc/kallsyms`, such as `ext4_mount`
                            type: string
                          parameters:
                            description: Parameters is used with predicate, for example,
                              if you want to inject slab error in `d_alloc_parallel(struct
                              dentry *parent, const struct qstr *name)` with a special
                              name `bananas`, you need to set it to `struct dentry
                              *parent, const struct qstr *name` otherwise omit it.
                            type: string
                          predicate:
                            description: Predicate will access the arguments of this
                              Frame, example with Parameters's, you can set it to
                              `STRNCMP(name->name, "bananas", 8)` to make inject only
                              with it, or omit it to inject for all d_alloc_parallel
                              call chain.
                            type: string
                        type: object
                      type: array
                    failtype:
                      description: 'FailType indicates what to fail, can be set to
                        ''0'' / ''1'' / ''2'' If `0`, indicates slab to fail (should_failslab)
                        If `1`, indicates alloc_page to fail (should_fail_alloc_page)
                        If `2`, indicates bio to fail (should_fail_bio) You can read:   1.
                        https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                        http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                        to learn more'
                      format: int32
                      maximum: 2
                      minimum: 0
                      type: integer
                    headers:
                      description: 'Headers indicates the appropriate kernel headers
                        you need. Eg: "linux/mmzone.h", "linux/blkdev.h" and so on'
                      items:
                        type: string
                      type: array
                    probability:
                      description: Probability indicates the fails with probability.
                        If you want 1%, please set this field with 1.
                      format: int32
                      maximum: 100
                      minimum: 0
                      type: integer
                    times:
                      description: Times indicates the max times of fails.
                      format: int32
                      minimum: 0
                      type: integer
                  required:
                  - failtype
                  type: object
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - failKernRequest
              - mode
              - selector
              type: object
            networkChaos:
              description: NetworkChaosSpec defines the desired state of NetworkChaos
              properties:
                action:
                  description: 'Action defines the specific network chaos action.
                    Supported action: partition, netem, delay, loss, duplicate, corrupt
                    Default action: delay'
                  enum:
                  - netem
                  - delay
                  - loss
                  - duplicate
                  - corrupt
                  - partition
                  - bandwidth
                  type: string
                bandwidth:
                  description: Bandwidth represents the detail about bandwidth control
                    action
                  properties:
                    buffer:
                      description: Buffer is the maximum amount of bytes that tokens
                        can be available for instantaneously.
                      format: int32
                      minimum: 1
                      type: integer
                    limit:
                      description: Limit is the number of bytes that can be queued
                        waiting for tokens to become available.
                      format: int32
                      minimum: 1
                      type: integer
                    minburst:
                      description: Minburst specifies the size of the peakrate bucket.
                        For perfect accuracy, should be set to the MTU of the interface.  If
                        a peakrate is needed, but some burstiness is acceptable, this
                        size can be raised. A 3000 byte minburst allows around 3mbit/s
                        of peakrate, given 1000 byte packets.
                      format: int32
                      minimum: 0
                      type: integer
                    peakrate:
                      description: Peakrate is the maximum depletion rate of the bucket.
                        The peakrate does not need to be set, it is only necessary
                        if perfect millisecond timescale shaping is required.
                      format: int64
                      minimum: 0
                      type: integer
                    rate:
                      description: Rate is the speed knob. Allows bps, kbps, mbps,
                        gbps, tbps unit. bps means bytes per second.
                      type: string
                  required:
                  - buffer
                  - limit
                  - rate
                  type: object
                corrupt:
                  description: Corrupt represents the detail about corrupt action
                  properties:
                    correlation:
                      type: string
                    corrupt:
                      type: string
                  required:
                  - correlation
                  - corrupt
                  type: object
                delay:
                  description: Delay represents the detail about delay action
                  properties:
                    correlation:
                      type: string
                    jitter:
                      type: string
                    latency:
                      type: string
                    reorder:
                      description: ReorderSpec defines details of packet reorder.
                      properties:
                        correlation:
                          type: string
                        gap:
                          type: integer
                        reorder:
                          type: string
                      required:
                      - correlation
                      - gap
                      - reorder
                      type: object
                  required:
                  - latency
                  type: object
                direction:
                  description: Direction represents the direction, this applies on
                    netem and network partition action
                  enum:
                  - to
                  - from
                  - both
                  - ""
                  type: string
                duplicate:
                  description: DuplicateSpec represents the detail about loss action
                  properties:
                    correlation:
                      type: string
                    duplicate:
                      type: string
                  required:
                  - correlation
                  - duplicate
                  type: object
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                externalTargets:
                  description: ExternalTargets represents network targets outside
                    k8s
                  items:
                    type: string
                  type: array
                loss:
                  description: Loss represents the detail about loss action
                  properties:
                    correlation:
                      type: string
                    loss:
                      type: string
                  required:
                  - correlation
                  - loss
                  type: object
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                target:
                  description: Target represents network target, this applies on netem
                    and network partition action
                  properties:
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                        mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                      - one
                      - all
                      - fixed
                      - fixed-percent
                      - random-max-percent
                      type: string
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that
                            can be used to select objects. A list of selectors based
                            on set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of
                            a pod at the current time. supported value: Pending /
                            Running / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod
                            names.
                          type: object
                      type: object
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods
                        the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to
                        do chaos action
                      type: string
                  required:
                  - mode
                  - selector
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - action
              - mode
              - selector
              type: object
            podChaos:
              description: PodChaosSpec defines the attributes that a user creates
                on a chaos experiment about pods.
              properties:
                action:
                  description: 'Action defines the specific pod chaos action. Supported
                    action: pod-kill / pod-failure / container-kill Default action:
                    pod-kill'
                  enum:
                  - pod-kill
                  - pod-failure
                  - container-kill
                  type: string
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action.
                    It is required when the action is `PodFailureAction`. A duration
                    string is a possibly signed sequence of decimal numbers, each
                    with optional fraction and a unit suffix, such as "300ms", "-1.5h"
                    or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s",
                    "m", "h".
                  type: string
                gracePeriod:
                  description: GracePeriod is used in pod-kill action. It represents
                    the duration in seconds before the pod should be deleted. Value
                    must be non-negative integer. The default value is zero that indicates
                    delete immediately.
                  format: int64
                  minimum: 0
                  type: integer
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - action
              - mode
              - selector
              type: object
            startTime:
              format: date-time
              type: string
            stressChaos:
              description: StressChaosSpec defines the desired state of StressChaos
              properties:
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                stressngStressors:
                  description: StressngStressors defines plenty of stressors just
                    like `Stressors` except that it's an experimental feature and
                    more powerful. You can define stressors in `stress-ng` (see also
                    `man stress-ng`) dialect, however not all of the supported stressors
                    are well tested. It maybe retired in later releases. You should
                    always use `Stressors` to define the stressors and use this only
                    when you want more stressors unsupported by `Stressors`. When
                    both `StressngStressors` and `Stressors` are defined, `StressngStressors`
                    wins.
                  type: string
                stressors:
                  description: Stressors defines plenty of stressors supported to
                    stress system components out. You can use one or more of them
                    to make up various kinds of stresses. At least one of the stressors
                    should be specified.
                  properties:
                    cpu:
                      description: CPUStressor stresses CPU out
                      properties:
                        load:
                          description: Load specifies P percent loading per CPU worker.
                            0 is effectively a sleep (no load) and 100 is full loading.
                          type: integer
                        options:
                          description: extend stress-ng options
                          items:
                            type: string
                          type: array
                        workers:
                          description: Workers specifies N workers to apply the stressor.
                          type: integer
                      required:
                      - workers
                      type: object
                    memory:
                      description: MemoryStressor stresses virtual memory out
                      properties:
                        options:
                          description: extend stress-ng options
                          items:
                            type: string
                          type: array
                        size:
                          description: Size specifies N bytes consumed per vm worker,
                            default is the total available memory. One can specify
                            the size as % of total available memory or in units of
                            B, KB/KiB, MB/MiB, GB/GiB, TB/TiB.
                          type: string
                        workers:
                          description: Workers specifies N workers to apply the stressor.
                          type: integer
                      required:
                      - workers
                      type: object
                  type: object
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - mode
              - selector
              type: object
            tasks:
              items:
                type: string
              type: array
            templateName:
              type: string
            timeChaos:
              description: TimeChaosSpec defines the desired state of TimeChaos
              properties:
                clockIds:
                  description: ClockIds defines all affected clock id All available
                    options are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
                    "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
                    "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
                  items:
                    type: string
                  type: array
                containerNames:
                  description: ContainerName indicates the name of affected container.
                    If not set, all containers will be injected
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration represents the duration of the chaos action
                  type: string
                mode:
                  description: 'Mode defines the mode to run chaos action. Supported
                    mode: one / all / fixed / fixed-percent / random-max-percent'
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  type: string
                selector:
                  description: Selector is used to select pods that are used to inject
                    chaos action.
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    expressionSelectors:
                      description: a slice of label selector expressions that can
                        be used to select objects. A list of selectors based on set-based
                        label expressions.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                timeOffset:
                  description: TimeOffset defines the delta time of injected program.
                    It's a possibly signed sequence of decimal numbers, such as "300ms",
                    "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"),
                    "ms", "s", "m", "h".
                  type: string
                value:
                  description: Value is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - mode
              - selector
              - timeOffset
              type: object
            type:
              type: string
            workflowName:
              type: string
          required:
          - startTime
          - templateName
          - type
          - workflowName
          type: object
        status:
          description: Most recently observed status of the workflow node
          properties:
            activeChildren:
              description: ActiveChildren means the created children node
              items:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              type: array
            chaosResource:
              description: ChaosResource refs to the real chaos CR object.
              properties:
                apiGroup:
                  description: APIGroup is the group for the resource being referenced.
                    If APIGroup is not specified, the specified Kind must be in the
                    core API group. For any other third-party types, APIGroup is required.
                  type: string
                kind:
                  description: Kind is the type of resource being referenced
                  type: string
                name:
                  description: Name is the name of resource being referenced
                  type: string
              required:
              - kind
              - name
              type: object
            conditions:
              description: Represents the latest available observations of a worklfow
                node's current state.
              items:
                properties:
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - reason
                - status
                - type
                type: object
              type: array
            finishedChildren:
              description: Children is necessary for representing the order when replicated
                child template references by parent template.
              items:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: workflows.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    shortNames:
    - wf
    singular: workflow
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a workflow
          properties:
            entry:
              type: string
            templates:
              items:
                properties:
                  awsChaos:
                    description: AwsChaosSpec is the content of the specification
                      for an AwsChaos
                    properties:
                      action:
                        description: 'Action defines the specific aws chaos action.
                          Supported action: ec2-stop / ec2-restart / detach-volume
                          Default action: ec2-stop'
                        enum:
                        - ec2-stop
                        - ec2-restart
                        - detach-volume
                        type: string
                      attackConfiguration:
                        description: AttackConfiguration indicates the name of the
                          attack. Needed in attack-configuration.
                        type: string
                      awsRegion:
                        description: AwsRegion defines the region of aws.
                        type: string
                      deviceName:
                        description: DeviceName indicates the name of the device.
                          Needed in detach-volume.
                        type: string
                      duration:
                        description: Duration represents the duration of the chaos
                          action.
                        type: string
                      ec2Instance:
                        description: Ec2Instance indicates the ID of the ec2 instance.
                        type: string
                      endpoint:
                        description: Endpoint indicates the endpoint of the aws server.
                          Just used it in test now.
                        type: string
                      secretName:
                        description: SecretName defines the name of kubernetes secret.
                        type: string
                      volumeID:
                        description: EbsVolume indicates the ID of the EBS volume.
                          Needed in detach-volume.
                        type: string
                    required:
                    - action
                    - awsRegion
                    - ec2Instance
                    type: object
                  dnsChaos:
                    description: DNSChaosSpec defines the desired state of DNSChaos
                    properties:
                      action:
                        description: 'Action defines the specific DNS chaos action.
                          Supported action: error, random Default action: error'
                        enum:
                        - error
                        - random
                        type: string
                      containerNames:
                        description: ContainerName indicates the name of affected
                          container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos
                          action
                        type: string
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      patterns:
                        description: "Choose which domain names to take effect, support
                          the placeholder ? and wildcard *, or the Specified domain
                          name. Note:      1. The wildcard * must be at the end of
                          the string. For example, chaos-*.org is invalid.      2.
                          if the patterns is empty, will take effect on all the domain
                          names. For example: \t\tThe value is [\"google.com\", \"github.*\",
                          \"chaos-mes?.org\"], \t\twill take effect on \"google.com\",
                          \"github.com\" and \"chaos-mesh.org\""
                        items:
                          type: string
                        type: array
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    type: object
                  duration:
                    type: string
                  gcpChaos:
                    description: GcpChaosSpec is the content of the specification
                      for a GcpChaos
                    properties:
                      action:
                        description: 'Action defines the specific gcp chaos action.
                          Supported action: node-stop / node-reset / disk-loss Default
                          action: node-stop'
                        enum:
                        - node-stop
                        - node-reset
                        - disk-loss
                        type: string
                      deviceNames:
                        description: The device name of disks to detach. Needed in
                          disk-loss.
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos
                          action.
                        type: string
                      instance:
                        description: Instance defines the name of the instance
                        type: string
                      project:
                        description: Project defines the name of gcp project.
                        type: string
                      secretName:
                        description: SecretName defines the name of kubernetes secret.
                          It is used for GCP credentials.
                        type: string
                      zone:
                        description: Zone defines the zone of gcp project.
                        type: string
                    required:
                    - action
                    - instance
                    - project
                    - zone
                    type: object
                  httpChaos:
                    properties:
                      abort:
                        description: Abort is a rule to abort a http session.
                        type: boolean
                      code:
                        description: Code is a rule to select target by http status
                          code in response.
                        format: int32
                        type: integer
                      delay:
                        description: Delay represents the delay of the target request/response.
                          A duration string is a possibly unsigned sequence of decimal
                          numbers, each with optional fraction and a unit suffix,
                          such as "300ms", "2h45m". Valid time units are "ns", "us"
                          (or "µs"), "ms", "s", "m", "h".
                        type: string
                      duration:
                        description: Duration represents the duration of the chaos
                          action.
                        type: string
                      method:
                        description: Method is a rule to select target by http method
                          in request.
                        type: string
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      patch:
                        description: Patch is a rule to patch some contents in target.
                        properties:
                          body:
                            description: Body is a rule to patch message body of target.
                            properties:
                              type:
                                description: Type represents the patch type, only
                                  support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                                  currently.
                                type: string
                              value:
                                description: Value is the patch contents.
                                type: string
                            required:
                            - type
                            - value
                            type: object
                          headers:
                            description: 'Headers is a rule to append http headers
                              of target. For example: `[["Set-Cookie", "<one cookie>"],
                              ["Set-Cookie", "<another cookie>"]]`.'
                            items:
                              items:
                                type: string
                              type: array
                            type: array
                          queries:
                            description: 'Queries is a rule to append uri queries
                              of target(Request only). For example: `[["foo", "bar"],
                              ["foo", "unknown"]]`.'
                            items:
                              items:
                                type: string
                              type: array
                            type: array
                        type: object
                      path:
                        description: Path is a rule to select target by uri path in
                          http request.
                        type: string
                      port:
                        description: Port represents the target port to be proxy of.
                        format: int32
                        type: integer
                      replace:
                        description: Replace is a rule to replace some contents in
                          target.
                        properties:
                          body:
                            description: Body is a rule to replace http message body
                              in target.
                            format: byte
                            type: string
                          code:
                            description: Code is a rule to replace http status code
                              in response.
                            format: int32
                            type: integer
                          headers:
                            additionalProperties:
                              type: string
                            description: Headers is a rule to replace http headers
                              of target. The key-value pairs represent header name
                              and header value pairs.
                            type: object
                          method:
                            description: Method is a rule to replace http method in
                              request.
                            type: string
                          path:
                            description: Path is rule to to replace uri path in http
                              request.
                            type: string
                          queries:
                            additionalProperties:
                              type: string
                            description: 'Queries is a rule to replace uri queries
                              in http request. For example, with value `{ "foo": "unknown"
                              }`, the `/?foo=bar` will be altered to `/?foo=unknown`,'
                            type: object
                        type: object
                      request_headers:
                        additionalProperties:
                          type: string
                        description: RequestHeaders is a rule to select target by
                          http headers in request. The key-value pairs represent header
                          name and header value pairs.
                        type: object
                      response_headers:
                        additionalProperties:
                          type: string
                        description: ResponseHeaders is a rule to select target by
                          http headers in response. The key-value pairs represent
                          header name and header value pairs.
                        type: object
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      target:
                        description: Target is the object to be selected and injected.
                        enum:
                        - Request
                        - Response
                        type: string
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                    required:
                    - mode
                    - selector
                    - target
                    type: object
                  ioChaos:
                    description: IOChaosSpec defines the desired state of IOChaos
                    properties:
                      action:
                        description: 'Action defines the specific pod chaos action.
                          Supported action: latency / fault / attrOverride / mistake'
                        enum:
                        - latency
                        - fault
                        - attrOverride
                        - mistake
                        type: string
                      attr:
                        description: Attr defines the overrided attribution
                        properties:
                          atime:
                            description: Timespec represents a time
                            properties:
                              nsec:
                                format: int64
                                type: integer
                              sec:
                                format: int64
                                type: integer
                            required:
                            - nsec
                            - sec
                            type: object
                          blocks:
                            format: int64
                            type: integer
                          ctime:
                            description: Timespec represents a time
                            properties:
                              nsec:
                                format: int64
                                type: integer
                              sec:
                                format: int64
                                type: integer
                            required:
                            - nsec
                            - sec
                            type: object
                          gid:
                            format: int32
                            type: integer
                          ino:
                            format: int64
                            type: integer
                          kind:
                            description: FileType represents type of a file
                            type: string
                          mtime:
                            description: Timespec represents a time
                            properties:
                              nsec:
                                format: int64
                                type: integer
                              sec:
                                format: int64
                                type: integer
                            required:
                            - nsec
                            - sec
                            type: object
                          nlink:
                            format: int32
                            type: integer
                          perm:
                            type: integer
                          rdev:
                            format: int32
                            type: integer
                          size:
                            format: int64
                            type: integer
                          uid:
                            format: int32
                            type: integer
                        type: object
                      containerNames:
                        description: ContainerName indicates the name of affected
                          container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      delay:
                        description: Delay defines the value of I/O chaos action delay.
                          A delay string is a possibly signed sequence of decimal
                          numbers, each with optional fraction and a unit suffix,
                          such as "300ms". Valid time units are "ns", "us" (or "µs"),
                          "ms", "s", "m", "h".
                        type: string
                      duration:
                        description: Duration represents the duration of the chaos
                          action. It is required when the action is `PodFailureAction`.
                          A duration string is a possibly signed sequence of decimal
                          numbers, each with optional fraction and a unit suffix,
                          such as "300ms", "-1.5h" or "2h45m". Valid time units are
                          "ns", "us" (or "µs"), "ms", "s", "m", "h".
                        type: string
                      errno:
                        description: 'Errno defines the error code that returned by
                          I/O action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
                        format: int32
                        type: integer
                      methods:
                        description: 'Methods defines the I/O methods for injecting
                          I/O chaos action. default: all I/O methods.'
                        items:
                          type: string
                        type: array
                      mistake:
                        description: Mistake defines what types of incorrectness are
                          injected to IO operations
                        properties:
                          filling:
                            description: Filling determines what is filled in the
                              miskate data.
                            enum:
                            - zero
                            - random
                            type: string
                          maxLength:
                            description: Max length of each wrong data segment in
                              bytes
                            format: int64
                            minimum: 1
                            type: integer
                          maxOccurrences:
                            description: There will be [1, MaxOccurrences] segments
                              of wrong data.
                            format: int64
                            minimum: 1
                            type: integer
                        type: object
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      path:
                        description: Path defines the path of files for injecting
                          I/O chaos action.
                        type: string
                      percent:
                        description: 'Percent defines the percentage of injection
                          errors and provides a number from 0-100. default: 100.'
                        type: integer
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                      volumePath:
                        description: VolumePath represents the mount path of injected
                          volume
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    - volumePath
                    type: object
                  jvmChaos:
                    description: JVMChaosSpec defines the desired state of JVMChaos
                    properties:
                      action:
                        description: 'Action defines the specific jvm chaos action.
                          Supported action: delay;return;script;cfl;oom;ccf;tce;cpf;tde;tpf'
                        enum:
                        - delay
                        - return
                        - script
                        - cfl
                        - oom
                        - ccf
                        - tce
                        - cpf
                        - tde
                        - tpf
                        type: string
                      containerNames:
                        description: ContainerName indicates the name of affected
                          container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos
                          action
                        type: string
                      flags:
                        additionalProperties:
                          type: string
                        description: Flags represents the flags of action
                        type: object
                      matchers:
                        additionalProperties:
                          type: string
                        description: Matchers represents the matching rules for the
                          target
                        type: object
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      target:
                        description: 'Target defines the specific jvm chaos target.
                          Supported target: servlet;psql;jvm;jedis;http;dubbo;rocketmq;tars;mysql;druid;redisson;rabbitmq;mongodb'
                        enum:
                        - servlet
                        - psql
                        - jvm
                        - jedis
                        - http
                        - dubbo
                        - rocketmq
                        - tars
                        - mysql
                        - druid
                        - redisson
                        - rabbitmq
                        - mongodb
                        type: string
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    - target
                    type: object
                  kernelChaos:
                    description: KernelChaosSpec defines the desired state of KernelChaos
                    properties:
                      duration:
                        description: Duration represents the duration of the chaos
                          action
                        type: string
                      failKernRequest:
                        description: FailKernRequest defines the request of kernel
                          injection
                        properties:
                          callchain:
                            description: 'Callchain indicate a special call chain,
                              such as:     ext4_mount       -> mount_subtree          ->
                              ...             -> should_failslab With an optional
                              set of predicates and an optional set of parameters,
                              which used with predicates. You can read call chan and
                              predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                              to learn more. If no special call chain, just keep Callchain
                              empty, which means it will fail at any call chain with
                              slab alloc (eg: kmalloc).'
                            items:
                              description: Frame defines the function signature and
                                predicate in function's body
                              properties:
                                funcname:
                                  description: Funcname can be find from kernel source
                                    or `/proc/kallsyms`, such as `ext4_mount`
                                  type: string
                                parameters:
                                  description: Parameters is used with predicate,
                                    for example, if you want to inject slab error
                                    in `d_alloc_parallel(struct dentry *parent, const
                                    struct qstr *name)` with a special name `bananas`,
                                    you need to set it to `struct dentry *parent,
                                    const struct qstr *name` otherwise omit it.
                                  type: string
                                predicate:
                                  description: Predicate will access the arguments
                                    of this Frame, example with Parameters's, you
                                    can set it to `STRNCMP(name->name, "bananas",
                                    8)` to make inject only with it, or omit it to
                                    inject for all d_alloc_parallel call chain.
                                  type: string
                              type: object
                            type: array
                          failtype:
                            description: 'FailType indicates what to fail, can be
                              set to ''0'' / ''1'' / ''2'' If `0`, indicates slab
                              to fail (should_failslab) If `1`, indicates alloc_page
                              to fail (should_fail_alloc_page) If `2`, indicates bio
                              to fail (should_fail_bio) You can read:   1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                              http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                              to learn more'
                            format: int32
                            maximum: 2
                            minimum: 0
                            type: integer
                          headers:
                            description: 'Headers indicates the appropriate kernel
                              headers you need. Eg: "linux/mmzone.h", "linux/blkdev.h"
                              and so on'
                            items:
                              type: string
                            type: array
                          probability:
                            description: Probability indicates the fails with probability.
                              If you want 1%, please set this field with 1.
                            format: int32
                            maximum: 100
                            minimum: 0
                            type: integer
                          times:
                            description: Times indicates the max times of fails.
                            format: int32
                            minimum: 0
                            type: integer
                        required:
                        - failtype
                        type: object
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                    required:
                    - failKernRequest
                    - mode
                    - selector
                    type: object
                  name:
                    type: string
                  networkChaos:
                    description: NetworkChaosSpec defines the desired state of NetworkChaos
                    properties:
                      action:
                        description: 'Action defines the specific network chaos action.
                          Supported action: partition, netem, delay, loss, duplicate,
                          corrupt Default action: delay'
                        enum:
                        - netem
                        - delay
                        - loss
                        - duplicate
                        - corrupt
                        - partition
                        - bandwidth
                        type: string
                      bandwidth:
                        description: Bandwidth represents the detail about bandwidth
                          control action
                        properties:
                          buffer:
                            description: Buffer is the maximum amount of bytes that
                              tokens can be available for instantaneously.
                            format: int32
                            minimum: 1
                            type: integer
                          limit:
                            description: Limit is the number of bytes that can be
                              queued waiting for tokens to become available.
                            format: int32
                            minimum: 1
                            type: integer
                          minburst:
                            description: Minburst specifies the size of the peakrate
                              bucket. For perfect accuracy, should be set to the MTU
                              of the interface.  If a peakrate is needed, but some
                              burstiness is acceptable, this size can be raised. A
                              3000 byte minburst allows around 3mbit/s of peakrate,
                              given 1000 byte packets.
                            format: int32
                            minimum: 0
                            type: integer
                          peakrate:
                            description: Peakrate is the maximum depletion rate of
                              the bucket. The peakrate does not need to be set, it
                              is only necessary if perfect millisecond timescale shaping
                              is required.
                            format: int64
                            minimum: 0
                            type: integer
                          rate:
                            description: Rate is the speed knob. Allows bps, kbps,
                              mbps, gbps, tbps unit. bps means bytes per second.
                            type: string
                        required:
                        - buffer
                        - limit
                        - rate
                        type: object
                      corrupt:
                        description: Corrupt represents the detail about corrupt action
                        properties:
                          correlation:
                            type: string
                          corrupt:
                            type: string
                        required:
                        - correlation
                        - corrupt
                        type: object
                      delay:
                        description: Delay represents the detail about delay action
                        properties:
                          correlation:
                            type: string
                          jitter:
                            type: string
                          latency:
                            type: string
                          reorder:
                            description: ReorderSpec defines details of packet reorder.
                            properties:
                              correlation:
                                type: string
                              gap:
                                type: integer
                              reorder:
                                type: string
                            required:
                            - correlation
                            - gap
                            - reorder
                            type: object
                        required:
                        - latency
                        type: object
                      direction:
                        description: Direction represents the direction, this applies
                          on netem and network partition action
                        enum:
                        - to
                        - from
                        - both
                        - ""
                        type: string
                      duplicate:
                        description: DuplicateSpec represents the detail about loss
                          action
                        properties:
                          correlation:
                            type: string
                          duplicate:
                            type: string
                        required:
                        - correlation
                        - duplicate
                        type: object
                      duration:
                        description: Duration represents the duration of the chaos
                          action
                        type: string
                      externalTargets:
                        description: ExternalTargets represents network targets outside
                          k8s
                        items:
                          type: string
                        type: array
                      loss:
                        description: Loss represents the detail about loss action
                        properties:
                          correlation:
                            type: string
                          loss:
                            type: string
                        required:
                        - correlation
                        - loss
                        type: object
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      target:
                        description: Target represents network target, this applies
                          on netem and network partition action
                        properties:
                          mode:
                            description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          selector:
                            description: Selector is used to select pods that are
                              used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions
                                  that can be used to select objects. A list of selectors
                                  based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which
                                  objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can
                                  be used to select nodes. Selector which must match
                                  a node's labels, and objects must belong to these
                                  selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects
                                  must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set
                                  values that used to select pods. The key defines
                                  the namespace which pods belong, and the each values
                                  is a set of pod names.
                                type: object
                            type: object
                          value:
                            description: Value is required when the mode is set to
                              `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                              If `FixedPodMode`, provide an integer of pods to do
                              chaos action. If `FixedPercentPodMod`, provide a number
                              from 0-100 to specify the percent of pods the server
                              can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                              a number from 0-100 to specify the max percent of pods
                              to do chaos action
                            type: string
                        required:
                        - mode
                        - selector
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    type: object
                  podChaos:
                    description: PodChaosSpec defines the attributes that a user creates
                      on a chaos experiment about pods.
                    properties:
                      action:
                        description: 'Action defines the specific pod chaos action.
                          Supported action: pod-kill / pod-failure / container-kill
                          Default action: pod-kill'
                        enum:
                        - pod-kill
                        - pod-failure
                        - container-kill
                        type: string
                      containerNames:
                        description: ContainerName indicates the name of affected
                          container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos
                          action. It is required when the action is `PodFailureAction`.
                          A duration string is a possibly signed sequence of decimal
                          numbers, each with optional fraction and a unit suffix,
                          such as "300ms", "-1.5h" or "2h45m". Valid time units are
                          "ns", "us" (or "µs"), "ms", "s", "m", "h".
                        type: string
                      gracePeriod:
                        description: GracePeriod is used in pod-kill action. It represents
                          the duration in seconds before the pod should be deleted.
                          Value must be non-negative integer. The default value is
                          zero that indicates delete immediately.
                        format: int64
                        minimum: 0
                        type: integer
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    type: object
                  stressChaos:
                    description: StressChaosSpec defines the desired state of StressChaos
                    properties:
                      containerNames:
                        description: ContainerName indicates the name of affected
                          container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos
                          action
                        type: string
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      stressngStressors:
                        description: StressngStressors defines plenty of stressors
                          just like `Stressors` except that it's an experimental feature
                          and more powerful. You can define stressors in `stress-ng`
                          (see also `man stress-ng`) dialect, however not all of the
                          supported stressors are well tested. It maybe retired in
                          later releases. You should always use `Stressors` to define
                          the stressors and use this only when you want more stressors
                          unsupported by `Stressors`. When both `StressngStressors`
                          and `Stressors` are defined, `StressngStressors` wins.
                        type: string
                      stressors:
                        description: Stressors defines plenty of stressors supported
                          to stress system components out. You can use one or more
                          of them to make up various kinds of stresses. At least one
                          of the stressors should be specified.
                        properties:
                          cpu:
                            description: CPUStressor stresses CPU out
                            properties:
                              load:
                                description: Load specifies P percent loading per
                                  CPU worker. 0 is effectively a sleep (no load) and
                                  100 is full loading.
                                type: integer
                              options:
                                description: extend stress-ng options
                                items:
                                  type: string
                                type: array
                              workers:
                                description: Workers specifies N workers to apply
                                  the stressor.
                                type: integer
                            required:
                            - workers
                            type: object
                          memory:
                            description: MemoryStressor stresses virtual memory out
                            properties:
                              options:
                                description: extend stress-ng options
                                items:
                                  type: string
                                type: array
                              size:
                                description: Size specifies N bytes consumed per vm
                                  worker, default is the total available memory. One
                                  can specify the size as % of total available memory
                                  or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB.
                                type: string
                              workers:
                                description: Workers specifies N workers to apply
                                  the stressor.
                                type: integer
                            required:
                            - workers
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                    required:
                    - mode
                    - selector
                    type: object
                  tasks:
                    items:
                      type: string
                    type: array
                  templateType:
                    type: string
                  timeChaos:
                    description: TimeChaosSpec defines the desired state of TimeChaos
                    properties:
                      clockIds:
                        description: ClockIds defines all affected clock id All available
                          options are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
                          "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
                          "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
                        items:
                          type: string
                        type: array
                      containerNames:
                        description: ContainerName indicates the name of affected
                          container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos
                          action
                        type: string
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used
                          to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that
                              can be used to select objects. A list of selectors based
                              on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which
                              objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be
                              used to select nodes. Selector which must match a node's
                              labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must
                              belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values
                              that used to select pods. The key defines the namespace
                              which pods belong, and the each values is a set of pod
                              names.
                            type: object
                        type: object
                      timeOffset:
                        description: TimeOffset defines the delta time of injected
                          program. It's a possibly signed sequence of decimal numbers,
                          such as "300ms", "-1.5h" or "2h45m". Valid time units are
                          "ns", "us" (or "µs"), "ms", "s", "m", "h".
                        type: string
                      value:
                        description: Value is required when the mode is set to `FixedPodMode`
                          / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                          provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                          provide a number from 0-100 to specify the percent of pods
                          the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                          a number from 0-100 to specify the max percent of pods to
                          do chaos action
                        type: string
                    required:
                    - mode
                    - selector
                    - timeOffset
                    type: object
                required:
                - name
                - templateType
                type: object
              type: array
          required:
          - entry
          - templates
          type: object
        status:
          description: Most recently observed status of the workflow
          properties:
            conditions:
              description: Represents the latest available observations of a workflow's
                current state.
              items:
                properties:
                  reason:
                    type: string
                  startTime:
                    format: date-time
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - reason
                - status
                - type
                type: object
              type: array
            endTime:
              format: date-time
              type: string
            entryNode:
              type: string
            startTime:
              format: date-time
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
