
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: workflows.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    shortNames:
    - wf
    singular: workflow
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a workflow
          properties:
            entry:
              type: string
            templates:
              items:
                properties:
                  awsChaos:
                    description: AwsChaosSpec is the content of the specification for an AwsChaos
                    properties:
                      action:
                        description: 'Action defines the specific aws chaos action. Supported action: ec2-stop / ec2-restart / detach-volume Default action: ec2-stop'
                        enum:
                        - ec2-stop
                        - ec2-restart
                        - detach-volume
                        type: string
                      attackConfiguration:
                        description: AttackConfiguration indicates the name of the
                          attack. Needed in attack-configuration.
                        type: string
                      awsRegion:
                        description: AwsRegion defines the region of aws.
                        type: string
                      deviceName:
                        description: DeviceName indicates the name of the device. Needed in detach-volume.
                        type: string
                      duration:
                        description: Duration represents the duration of the chaos action.
                        type: string
                      ec2Instance:
                        description: Ec2Instance indicates the ID of the ec2 instance.
                        type: string
                      endpoint:
                        description: Endpoint indicates the endpoint of the aws server. Just used it in test now.
                        type: string
                      secretName:
                        description: SecretName defines the name of kubernetes secret.
                        type: string
                      volumeID:
                        description: EbsVolume indicates the ID of the EBS volume. Needed in detach-volume.
                        type: string
                    required:
                    - action
                    - awsRegion
                    - ec2Instance
                    type: object
                  dnsChaos:
                    description: DNSChaosSpec defines the desired state of DNSChaos
                    properties:
                      action:
                        description: 'Action defines the specific DNS chaos action. Supported action: error, random Default action: error'
                        enum:
                        - error
                        - random
                        type: string
                      containerNames:
                        description: ContainerName indicates the name of affected container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos action
                        type: string
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      patterns:
                        description: "Choose which domain names to take effect, support the placeholder ? and wildcard *, or the Specified domain name. Note:      1. The wildcard * must be at the end of the string. For example, chaos-*.org is invalid.      2. if the patterns is empty, will take effect on all the domain names. For example: \t\tThe value is [\"google.com\", \"github.*\", \"chaos-mes?.org\"], \t\twill take effect on \"google.com\", \"github.com\" and \"chaos-mesh.org\""
                        items:
                          type: string
                        type: array
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    type: object
                  duration:
                    type: string
                  gcpChaos:
                    description: GcpChaosSpec is the content of the specification for a GcpChaos
                    properties:
                      action:
                        description: 'Action defines the specific gcp chaos action. Supported action: node-stop / node-reset / disk-loss Default action: node-stop'
                        enum:
                        - node-stop
                        - node-reset
                        - disk-loss
                        type: string
                      deviceNames:
                        description: The device name of disks to detach. Needed in disk-loss.
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos action.
                        type: string
                      instance:
                        description: Instance defines the name of the instance
                        type: string
                      project:
                        description: Project defines the name of gcp project.
                        type: string
                      secretName:
                        description: SecretName defines the name of kubernetes secret. It is used for GCP credentials.
                        type: string
                      zone:
                        description: Zone defines the zone of gcp project.
                        type: string
                    required:
                    - action
                    - instance
                    - project
                    - zone
                    type: object
                  httpChaos:
                    properties:
                      abort:
                        description: Abort is a rule to abort a http session.
                        type: boolean
                      code:
                        description: Code is a rule to select target by http status code in response.
                        format: int32
                        type: integer
                      delay:
                        description: Delay represents the delay of the target request/response. A duration string is a possibly unsigned sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms", "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                        type: string
                      duration:
                        description: Duration represents the duration of the chaos action.
                        type: string
                      method:
                        description: Method is a rule to select target by http method in request.
                        type: string
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      patch:
                        description: Patch is a rule to patch some contents in target.
                        properties:
                          body:
                            description: Body is a rule to patch message body of target.
                            properties:
                              type:
                                description: Type represents the patch type, only support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396) currently.
                                type: string
                              value:
                                description: Value is the patch contents.
                                type: string
                            required:
                            - type
                            - value
                            type: object
                          headers:
                            description: 'Headers is a rule to append http headers of target. For example: `[["Set-Cookie", "<one cookie>"], ["Set-Cookie", "<another cookie>"]]`.'
                            items:
                              items:
                                type: string
                              type: array
                            type: array
                          queries:
                            description: 'Queries is a rule to append uri queries of target(Request only). For example: `[["foo", "bar"], ["foo", "unknown"]]`.'
                            items:
                              items:
                                type: string
                              type: array
                            type: array
                        type: object
                      path:
                        description: Path is a rule to select target by uri path in http request.
                        type: string
                      port:
                        description: Port represents the target port to be proxy of.
                        format: int32
                        type: integer
                      replace:
                        description: Replace is a rule to replace some contents in target.
                        properties:
                          body:
                            description: Body is a rule to replace http message body in target.
                            format: byte
                            type: string
                          code:
                            description: Code is a rule to replace http status code in response.
                            format: int32
                            type: integer
                          headers:
                            additionalProperties:
                              type: string
                            description: Headers is a rule to replace http headers of target. The key-value pairs represent header name and header value pairs.
                            type: object
                          method:
                            description: Method is a rule to replace http method in request.
                            type: string
                          path:
                            description: Path is rule to to replace uri path in http request.
                            type: string
                          queries:
                            additionalProperties:
                              type: string
                            description: 'Queries is a rule to replace uri queries in http request. For example, with value `{ "foo": "unknown" }`, the `/?foo=bar` will be altered to `/?foo=unknown`,'
                            type: object
                        type: object
                      request_headers:
                        additionalProperties:
                          type: string
                        description: RequestHeaders is a rule to select target by http headers in request. The key-value pairs represent header name and header value pairs.
                        type: object
                      response_headers:
                        additionalProperties:
                          type: string
                        description: ResponseHeaders is a rule to select target by http headers in response. The key-value pairs represent header name and header value pairs.
                        type: object
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      target:
                        description: Target is the object to be selected and injected.
                        enum:
                        - Request
                        - Response
                        type: string
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                    required:
                    - mode
                    - selector
                    - target
                    type: object
                  ioChaos:
                    description: IOChaosSpec defines the desired state of IOChaos
                    properties:
                      action:
                        description: 'Action defines the specific pod chaos action. Supported action: latency / fault / attrOverride / mistake'
                        enum:
                        - latency
                        - fault
                        - attrOverride
                        - mistake
                        type: string
                      attr:
                        description: Attr defines the overrided attribution
                        properties:
                          atime:
                            description: Timespec represents a time
                            properties:
                              nsec:
                                format: int64
                                type: integer
                              sec:
                                format: int64
                                type: integer
                            required:
                            - nsec
                            - sec
                            type: object
                          blocks:
                            format: int64
                            type: integer
                          ctime:
                            description: Timespec represents a time
                            properties:
                              nsec:
                                format: int64
                                type: integer
                              sec:
                                format: int64
                                type: integer
                            required:
                            - nsec
                            - sec
                            type: object
                          gid:
                            format: int32
                            type: integer
                          ino:
                            format: int64
                            type: integer
                          kind:
                            description: FileType represents type of a file
                            type: string
                          mtime:
                            description: Timespec represents a time
                            properties:
                              nsec:
                                format: int64
                                type: integer
                              sec:
                                format: int64
                                type: integer
                            required:
                            - nsec
                            - sec
                            type: object
                          nlink:
                            format: int32
                            type: integer
                          perm:
                            type: integer
                          rdev:
                            format: int32
                            type: integer
                          size:
                            format: int64
                            type: integer
                          uid:
                            format: int32
                            type: integer
                        type: object
                      containerNames:
                        description: ContainerName indicates the name of affected container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      delay:
                        description: Delay defines the value of I/O chaos action delay. A delay string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                        type: string
                      duration:
                        description: Duration represents the duration of the chaos action. It is required when the action is `PodFailureAction`. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms", "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                        type: string
                      errno:
                        description: 'Errno defines the error code that returned by I/O action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
                        format: int32
                        type: integer
                      methods:
                        description: 'Methods defines the I/O methods for injecting I/O chaos action. default: all I/O methods.'
                        items:
                          type: string
                        type: array
                      mistake:
                        description: Mistake defines what types of incorrectness are injected to IO operations
                        properties:
                          filling:
                            description: Filling determines what is filled in the miskate data.
                            enum:
                            - zero
                            - random
                            type: string
                          maxLength:
                            description: Max length of each wrong data segment in bytes
                            format: int64
                            minimum: 1
                            type: integer
                          maxOccurrences:
                            description: There will be [1, MaxOccurrences] segments of wrong data.
                            format: int64
                            minimum: 1
                            type: integer
                        type: object
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      path:
                        description: Path defines the path of files for injecting I/O chaos action.
                        type: string
                      percent:
                        description: 'Percent defines the percentage of injection errors and provides a number from 0-100. default: 100.'
                        type: integer
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                      volumePath:
                        description: VolumePath represents the mount path of injected volume
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    - volumePath
                    type: object
                  jvmChaos:
                    description: JVMChaosSpec defines the desired state of JVMChaos
                    properties:
                      action:
                        description: 'Action defines the specific jvm chaos action. Supported action: delay;return;script;cfl;oom;ccf;tce;cpf;tde;tpf'
                        enum:
                        - delay
                        - return
                        - script
                        - cfl
                        - oom
                        - ccf
                        - tce
                        - cpf
                        - tde
                        - tpf
                        type: string
                      containerNames:
                        description: ContainerName indicates the name of affected container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos action
                        type: string
                      flags:
                        additionalProperties:
                          type: string
                        description: Flags represents the flags of action
                        type: object
                      matchers:
                        additionalProperties:
                          type: string
                        description: Matchers represents the matching rules for the target
                        type: object
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      target:
                        description: 'Target defines the specific jvm chaos target. Supported target: servlet;psql;jvm;jedis;http;dubbo;rocketmq;tars;mysql;druid;redisson;rabbitmq;mongodb'
                        enum:
                        - servlet
                        - psql
                        - jvm
                        - jedis
                        - http
                        - dubbo
                        - rocketmq
                        - tars
                        - mysql
                        - druid
                        - redisson
                        - rabbitmq
                        - mongodb
                        type: string
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    - target
                    type: object
                  kernelChaos:
                    description: KernelChaosSpec defines the desired state of KernelChaos
                    properties:
                      duration:
                        description: Duration represents the duration of the chaos action
                        type: string
                      failKernRequest:
                        description: FailKernRequest defines the request of kernel injection
                        properties:
                          callchain:
                            description: 'Callchain indicate a special call chain, such as:     ext4_mount       -> mount_subtree          -> ...             -> should_failslab With an optional set of predicates and an optional set of parameters, which used with predicates. You can read call chan and predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples to learn more. If no special call chain, just keep Callchain empty, which means it will fail at any call chain with slab alloc (eg: kmalloc).'
                            items:
                              description: Frame defines the function signature and predicate in function's body
                              properties:
                                funcname:
                                  description: Funcname can be find from kernel source or `/proc/kallsyms`, such as `ext4_mount`
                                  type: string
                                parameters:
                                  description: Parameters is used with predicate, for example, if you want to inject slab error in `d_alloc_parallel(struct dentry *parent, const struct qstr *name)` with a special name `bananas`, you need to set it to `struct dentry *parent, const struct qstr *name` otherwise omit it.
                                  type: string
                                predicate:
                                  description: Predicate will access the arguments of this Frame, example with Parameters's, you can set it to `STRNCMP(name->name, "bananas", 8)` to make inject only with it, or omit it to inject for all d_alloc_parallel call chain.
                                  type: string
                              type: object
                            type: array
                          failtype:
                            description: 'FailType indicates what to fail, can be set to ''0'' / ''1'' / ''2'' If `0`, indicates slab to fail (should_failslab) If `1`, indicates alloc_page to fail (should_fail_alloc_page) If `2`, indicates bio to fail (should_fail_bio) You can read:   1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2. http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt to learn more'
                            format: int32
                            maximum: 2
                            minimum: 0
                            type: integer
                          headers:
                            description: 'Headers indicates the appropriate kernel headers you need. Eg: "linux/mmzone.h", "linux/blkdev.h" and so on'
                            items:
                              type: string
                            type: array
                          probability:
                            description: Probability indicates the fails with probability. If you want 1%, please set this field with 1.
                            format: int32
                            maximum: 100
                            minimum: 0
                            type: integer
                          times:
                            description: Times indicates the max times of fails.
                            format: int32
                            minimum: 0
                            type: integer
                        required:
                        - failtype
                        type: object
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                    required:
                    - failKernRequest
                    - mode
                    - selector
                    type: object
                  name:
                    type: string
                  networkChaos:
                    description: NetworkChaosSpec defines the desired state of NetworkChaos
                    properties:
                      action:
                        description: 'Action defines the specific network chaos action. Supported action: partition, netem, delay, loss, duplicate, corrupt Default action: delay'
                        enum:
                        - netem
                        - delay
                        - loss
                        - duplicate
                        - corrupt
                        - partition
                        - bandwidth
                        type: string
                      bandwidth:
                        description: Bandwidth represents the detail about bandwidth control action
                        properties:
                          buffer:
                            description: Buffer is the maximum amount of bytes that tokens can be available for instantaneously.
                            format: int32
                            minimum: 1
                            type: integer
                          limit:
                            description: Limit is the number of bytes that can be queued waiting for tokens to become available.
                            format: int32
                            minimum: 1
                            type: integer
                          minburst:
                            description: Minburst specifies the size of the peakrate bucket. For perfect accuracy, should be set to the MTU of the interface.  If a peakrate is needed, but some burstiness is acceptable, this size can be raised. A 3000 byte minburst allows around 3mbit/s of peakrate, given 1000 byte packets.
                            format: int32
                            minimum: 0
                            type: integer
                          peakrate:
                            description: Peakrate is the maximum depletion rate of the bucket. The peakrate does not need to be set, it is only necessary if perfect millisecond timescale shaping is required.
                            format: int64
                            minimum: 0
                            type: integer
                          rate:
                            description: Rate is the speed knob. Allows bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.
                            type: string
                        required:
                        - buffer
                        - limit
                        - rate
                        type: object
                      corrupt:
                        description: Corrupt represents the detail about corrupt action
                        properties:
                          correlation:
                            type: string
                          corrupt:
                            type: string
                        required:
                        - correlation
                        - corrupt
                        type: object
                      delay:
                        description: Delay represents the detail about delay action
                        properties:
                          correlation:
                            type: string
                          jitter:
                            type: string
                          latency:
                            type: string
                          reorder:
                            description: ReorderSpec defines details of packet reorder.
                            properties:
                              correlation:
                                type: string
                              gap:
                                type: integer
                              reorder:
                                type: string
                            required:
                            - correlation
                            - gap
                            - reorder
                            type: object
                        required:
                        - latency
                        type: object
                      direction:
                        description: Direction represents the direction, this applies on netem and network partition action
                        enum:
                        - to
                        - from
                        - both
                        - ""
                        type: string
                      duplicate:
                        description: DuplicateSpec represents the detail about loss action
                        properties:
                          correlation:
                            type: string
                          duplicate:
                            type: string
                        required:
                        - correlation
                        - duplicate
                        type: object
                      duration:
                        description: Duration represents the duration of the chaos action
                        type: string
                      externalTargets:
                        description: ExternalTargets represents network targets outside k8s
                        items:
                          type: string
                        type: array
                      loss:
                        description: Loss represents the detail about loss action
                        properties:
                          correlation:
                            type: string
                          loss:
                            type: string
                        required:
                        - correlation
                        - loss
                        type: object
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      target:
                        description: Target represents network target, this applies on netem and network partition action
                        properties:
                          mode:
                            description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                            enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                            type: string
                          selector:
                            description: Selector is used to select pods that are used to inject chaos action.
                            properties:
                              annotationSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                                type: object
                              expressionSelectors:
                                description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                                items:
                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              fieldSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can be used to select objects. A selector based on fields.
                                type: object
                              labelSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can be used to select objects. A selector based on labels.
                                type: object
                              namespaces:
                                description: Namespaces is a set of namespace to which objects belong.
                                items:
                                  type: string
                                type: array
                              nodeSelectors:
                                additionalProperties:
                                  type: string
                                description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                                type: object
                              nodes:
                                description: Nodes is a set of node name and objects must belong to these nodes.
                                items:
                                  type: string
                                type: array
                              podPhaseSelectors:
                                description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                                items:
                                  type: string
                                type: array
                              pods:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                                type: object
                            type: object
                          value:
                            description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                            type: string
                        required:
                        - mode
                        - selector
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    type: object
                  podChaos:
                    description: PodChaosSpec defines the attributes that a user creates on a chaos experiment about pods.
                    properties:
                      action:
                        description: 'Action defines the specific pod chaos action. Supported action: pod-kill / pod-failure / container-kill Default action: pod-kill'
                        enum:
                        - pod-kill
                        - pod-failure
                        - container-kill
                        type: string
                      containerNames:
                        description: ContainerName indicates the name of affected container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos action. It is required when the action is `PodFailureAction`. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms", "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                        type: string
                      gracePeriod:
                        description: GracePeriod is used in pod-kill action. It represents the duration in seconds before the pod should be deleted. Value must be non-negative integer. The default value is zero that indicates delete immediately.
                        format: int64
                        minimum: 0
                        type: integer
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                    required:
                    - action
                    - mode
                    - selector
                    type: object
                  stressChaos:
                    description: StressChaosSpec defines the desired state of StressChaos
                    properties:
                      containerNames:
                        description: ContainerName indicates the name of affected container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos action
                        type: string
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      stressngStressors:
                        description: StressngStressors defines plenty of stressors just like `Stressors` except that it's an experimental feature and more powerful. You can define stressors in `stress-ng` (see also `man stress-ng`) dialect, however not all of the supported stressors are well tested. It maybe retired in later releases. You should always use `Stressors` to define the stressors and use this only when you want more stressors unsupported by `Stressors`. When both `StressngStressors` and `Stressors` are defined, `StressngStressors` wins.
                        type: string
                      stressors:
                        description: Stressors defines plenty of stressors supported to stress system components out. You can use one or more of them to make up various kinds of stresses. At least one of the stressors should be specified.
                        properties:
                          cpu:
                            description: CPUStressor stresses CPU out
                            properties:
                              load:
                                description: Load specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100 is full loading.
                                type: integer
                              options:
                                description: extend stress-ng options
                                items:
                                  type: string
                                type: array
                              workers:
                                description: Workers specifies N workers to apply the stressor.
                                type: integer
                            required:
                            - workers
                            type: object
                          memory:
                            description: MemoryStressor stresses virtual memory out
                            properties:
                              options:
                                description: extend stress-ng options
                                items:
                                  type: string
                                type: array
                              size:
                                description: Size specifies N bytes consumed per vm worker, default is the total available memory. One can specify the size as % of total available memory or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB.
                                type: string
                              workers:
                                description: Workers specifies N workers to apply the stressor.
                                type: integer
                            required:
                            - workers
                            type: object
                        type: object
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                    required:
                    - mode
                    - selector
                    type: object
                  tasks:
                    items:
                      type: string
                    type: array
                  templateType:
                    type: string
                  timeChaos:
                    description: TimeChaosSpec defines the desired state of TimeChaos
                    properties:
                      clockIds:
                        description: ClockIds defines all affected clock id All available options are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID", "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM", "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
                        items:
                          type: string
                        type: array
                      containerNames:
                        description: ContainerName indicates the name of affected container. If not set, all containers will be injected
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration represents the duration of the chaos action
                        type: string
                      mode:
                        description: 'Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent'
                        enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                        type: string
                      selector:
                        description: Selector is used to select pods that are used to inject chaos action.
                        properties:
                          annotationSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on annotations.
                            type: object
                          expressionSelectors:
                            description: a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          fieldSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on fields.
                            type: object
                          labelSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select objects. A selector based on labels.
                            type: object
                          namespaces:
                            description: Namespaces is a set of namespace to which objects belong.
                            items:
                              type: string
                            type: array
                          nodeSelectors:
                            additionalProperties:
                              type: string
                            description: Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
                            type: object
                          nodes:
                            description: Nodes is a set of node name and objects must belong to these nodes.
                            items:
                              type: string
                            type: array
                          podPhaseSelectors:
                            description: 'PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown'
                            items:
                              type: string
                            type: array
                          pods:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
                            type: object
                        type: object
                      timeOffset:
                        description: TimeOffset defines the delta time of injected program. It's a possibly signed sequence of decimal numbers, such as "300ms", "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                        type: string
                      value:
                        description: Value is required when the mode is set to `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`, provide an integer of pods to do chaos action. If `FixedPercentPodMod`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number from 0-100 to specify the max percent of pods to do chaos action
                        type: string
                    required:
                    - mode
                    - selector
                    - timeOffset
                    type: object
                required:
                - name
                - templateType
                type: object
              type: array
          required:
          - entry
          - templates
          type: object
        status:
          description: Most recently observed status of the workflow
          properties:
            conditions:
              description: Represents the latest available observations of a workflow's current state.
              items:
                properties:
                  reason:
                    type: string
                  startTime:
                    format: date-time
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - reason
                - status
                - type
                type: object
              type: array
            endTime:
              format: date-time
              type: string
            entryNode:
              type: string
            startTime:
              format: date-time
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
